import queryString from 'query-string'
import _ from 'lodash';
import { Newsletter, isNewsletter } from './newsletter'

const INBOX_SIZE = 25;
const NEWSLETTERS_SIZE = 100;
const MOVE_LABELS_SIZE = 100;
const MESSAGE_BATCH_SIZE = 50;
const MESSAGE_SLEEP_TIME = 1000;

export async function fetchInboxMessages(token: string, labelId: string, pageToken: string | null): Promise<[Message[], string | null]> {
  const query = { maxResults: INBOX_SIZE, labelIds: labelId };
  if (pageToken != null) query['pageToken'] = pageToken;
  const messageList = await get('https://gmail.googleapis.com/gmail/v1/users/me/messages', token, query);
  if (!messageList.messages) return [[], null]
  const messageIds: string[] = messageList.messages.map(m => m.id);
  const nextPageToken = messageList.pageToken;
  const messages = await getMessages(messageIds, token);
  console.log(messages[0]);
  return [messages, nextPageToken]
}

export async function fetchNewsletters(token: string): Promise<Newsletter[]> {
  const messageList = await get('https://gmail.googleapis.com/gmail/v1/users/me/messages', token, {
    maxResults: NEWSLETTERS_SIZE,
    q: 'category:forums OR category:promotions',
  });
  if (!messageList.messages) return [];
  const messageIds: string[] = messageList.messages.map(m => m.id);
  console.log(messageIds.length);
  const messages = await getMessages(messageIds, token);

  const newsletters: Newsletter[] = [];
  messages.forEach(m => {
    const nl = isNewsletter(m);
    if (nl !== false) newsletters.push(nl);
    if (nl == false) console.log('Rejected', nl, m.id);
  })
  console.log(newsletters);
  return _.uniqBy(newsletters, n => n.from.toLowerCase());
}

export async function createLabel(token: string, name: string): Promise<string> {
  const label = await post('https://gmail.googleapis.com/gmail/v1/users/me/labels', token, {
    name: name,
    messageListVisibility: 'SHOW',
    labelListVisibility: 'LABEL_SHOW',
  });
  console.log(label);
  return label.id as string;
}

export async function createFilter(token: string, labelId: string, from: string): Promise<string> {
  const filter = await post('https://gmail.googleapis.com/gmail/v1/users/me/settings/filters', token, {
    criteria: {
      from: from,
    },
    action: {
      addLabelIds: [labelId],
      removeLabelIds: ['INBOX'],
    },
  });
  console.log(filter);

  // Retroactively move old messages to the filter.
  const retroactiveMessageList = await get('https://gmail.googleapis.com/gmail/v1/users/me/messages', token, {
    maxResults: MOVE_LABELS_SIZE,
    q: 'from:' + from,
  });
  await post('https://gmail.googleapis.com/gmail/v1/users/me/messages/batchModify', token, {
    ids: retroactiveMessageList.messages.map(m => m.id),
    addLabelIds: [labelId],
    removeLabelIds: ['INBOX'],
  });

  return filter.id as string;
}

async function getMessages(ids: string[], token: string) {
  const allResults = [];
  const batches = _.chunk(ids, MESSAGE_BATCH_SIZE);
  for (let i = 0; i < batches.length; i++) {
    const batch = batches[i];
    const results = await Promise.all(batch.map(id => getMessage(id, token)));
    allResults.push(...results);
    if (i < batches.length - 1) await sleep(MESSAGE_SLEEP_TIME);
  }
  return allResults;
}

export type Message = {
  id: string,
  labelIds: string[],
  snippet: string,
  internalDate: string,
  payload: {
    mimeType: string,
    body: {
      data: string,
    }
    headers: {
      name: string,
      value: string,
    }[],
    parts: {
      mimeType: string,
      body: {
        data: string,
      }
      parts: {
        mimeType: string,
        body: {
          data: string,
        }
      }[] | null,
    }[],
  }
}

export const exampleMessage1 = {
  id: '1234',
  labelIds: [],
  snippet: 'If you&#39;re a creator, you might have heard that NFTs are selling for tens of thousands of dollars. In this post, I&#39;ll explain what NFTs are and how you can create one to let your fans own your',
  payload: {
    headers: [
      {name: 'Subject', value: 'A Step by Step Guide to NFTs for Creators'},
      {name: 'From', value: 'Peter <peteryang@substack.com>'},
    ],
    parts: [],
  },
  internalDate: "1613682180000",
}

async function getMessage(id: string, token: string) {
  return await get('https://gmail.googleapis.com/gmail/v1/users/me/messages/' + id, token, {});
}

async function get(url: string, token: string, query) {
  query.key = 'AIzaSyAPPb6uJ1hFBethuSZtX9MuVyFViuXAcd8';
  const resp = await fetch(url + '?' + queryString.stringify(query), {
    method: 'GET',
    headers: { 'Authorization': 'Bearer ' + token },
  });
  return await resp.json();
}

async function post(url: string, token: string, body) {
  const resp = await fetch(url + '?key=AIzaSyAPPb6uJ1hFBethuSZtX9MuVyFViuXAcd8', {
    method: 'POST',
    headers: {
      'Authorization': 'Bearer ' + token,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(body),
  });
  if (resp.status === 204) return null;
  return await resp.json();
}

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

const reFrom = /(.*) <(.*)>/
export function parseFrom(from: string): { name: string, email: string } {
  const matches = from.match(reFrom);
  if (!matches) {
    console.log('Parse From - No Matches for: ', from);
    return { name: from, email: from };
  }
  let name = matches[1].trim();
  if (name.startsWith("\"")) {
    name = name.substr(1);
  }
  if (name.endsWith("\"")) {
    name = name.substr(0, name.length - 1);
  }
  return { name: name, email: matches[2] }
}

export function getHeader(message: Message, header: string): string | null {
  const h = message.payload.headers.find(h => h.name.toLowerCase() === header);
  if (!h) return null;
  return h.value
}

const goodDomains = [
  'substack.com',
]

export const exampleMessage2 = {
  id: '1235',
  labelIds: [],
  snippet: 'If you&#39;ve been busy lately, here are some of the most popular stories that we have published recently. \u200c \u200c \u200c Don&#39;t Miss These Trending Stories Here are some of the most popular stories that we',
  payload: {
    headers: [
      {name: 'Subject', value: 'This Week\'s Trending Stories.'},
      {name: 'From', value: 'Jessica Lessin <hello@theinformation.com>'},
    ],
    parts: [{
      mimeType: 'text/html',
      body: {
        data: 'PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0KPGh0bWw-DQogIDxoZWFkPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4NCiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IlRoZSBncmVhdCBLZW55YW4gZ2lyYWZmZSByZXNjdWUiPg0KICAgIDx0aXRsZT5UaGUgZ3JlYXQgS2VueWFuIGdpcmFmZmUgcmVzY3VlPC90aXRsZT4NCg0KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KCQlhew0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCX0NCgkJYTpob3ZlcnsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQl9DQoJCWJvZHl7DQoJCQliYWNrZ3JvdW5kOiNmNWY0ZjM7DQoJCQl3aWR0aDoxMDAlICFpbXBvcnRhbnQ7DQoJCX0NCgkJYm9keXsNCgkJCS13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lOw0KCQl9DQoJCWJvZHl7DQoJCQltYXJnaW46MDsNCgkJCXBhZGRpbmc6MDsNCgkJfQ0KCQlpbWd7DQoJCQlib3JkZXI6bm9uZTsNCgkJCWZvbnQtc2l6ZToxNHB4Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWhlaWdodDphdXRvOw0KCQkJbGluZS1oZWlnaHQ6MTAwJTsNCgkJCW91dGxpbmU6bm9uZTsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQkJdGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZTsNCgkJfQ0KCQkjYmFja2dyb3VuZFRhYmxlew0KCQkJaGVpZ2h0OjEwMCUgIWltcG9ydGFudDsNCgkJCW1hcmdpbjowOw0KCQkJcGFkZGluZzowOw0KCQkJd2lkdGg6MTAwJSAhaW1wb3J0YW50Ow0KCQl9DQoJCSN0ZW1wbGF0ZUNvbnRhaW5lcnsNCgkJCWJvcmRlcjpub25lOw0KCQl9DQoJCS5ibHVyYnsNCgkJCWNvbG9yOiNmNWY0ZjM7DQoJCQlmb250LXNpemU6MTFweDsNCgkJfQ0KCQkudGl0bGV7DQoJCQltYXJnaW4tdG9wOjI0cHg7DQoJCX0NCgkJaDEsLmgxew0KCQkJY29sb3I6IzM4MmMxNDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZTo0MnB4Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWxpbmUtaGVpZ2h0OjFlbTsNCgkJCW1hcmdpbi10b3A6LTRweDsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjAyZW07DQoJCX0NCgkJaDIsLmgyew0KCQkJY29sb3I6IzM4MmMxNDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtd2VpZ2h0OmJvbGQ7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlmb250LXNpemU6MzlweDsNCgkJCWxldHRlci1zcGFjaW5nOi4wMmVtOw0KCQkJdGV4dC1hbGlnbjpjZW50ZXI7DQoJCX0NCgkJaDMsLmgzew0KCQkJY29sb3I6IzM4MmMxNCAhaW1wb3J0YW50Ow0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWZvbnQtc2l6ZTozMnB4Ow0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQl9DQoJCWg0LC5oNHsNCgkJCWNvbG9yOiMzODJjMTQ7DQoJCQlkaXNwbGF5OmJsb2NrOw0KCQkJZm9udC1mYW1pbHk6IkhlbHZldGljYSBOZXVlIiwiSGVsdmV0aWNhIiwnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGluZS1oZWlnaHQ6MzBweDsNCgkJCW1hcmdpbi1ib3R0b206MnB4Ow0KCQkJdGV4dC1hbGlnbjpjZW50ZXI7DQoJCQlmb250LXNpemU6MjRweDsNCgkJCWxldHRlci1zcGFjaW5nOi0uMDFlbTsNCgkJfQ0KCQloNSwuaDV7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjE3cHg7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGluZS1oZWlnaHQ6MTAwJTsNCgkJCW1hcmdpbi1ib3R0b206MjZweDsNCgkJCW1hcmdpbi10b3A6MTJweDsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCXAsLnAsLnBBbHR7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OlRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWY7DQoJCQlmb250LXNpemU6MTlweDsNCgkJCWxpbmUtaGVpZ2h0OjI0cHg7DQoJCQltYXJnaW4tdG9wOjI0cHg7DQoJCQlwYWRkaW5nLWxlZnQ6MnB4Ow0KCQkJcGFkZGluZy1yaWdodDoycHg7DQoJCQl0ZXh0LWFsaWduOmxlZnQ7DQoJCX0NCgkJLnByZWhlYWRlckNvbnRlbnQgZGl2ew0KCQkJY29sb3I6IzgwODA4MDsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjExcHg7DQoJCQltYXJnaW4tYm90dG9tOjMwcHg7DQoJCQl0ZXh0LWFsaWduOmNlbnRlcjsNCgkJCXBhZGRpbmc6MTNweCAwIDdweDsNCgkJfQ0KCQkuaWNvbnsNCgkJCW1hcmdpbi1ib3R0b206MTZweDsNCgkJCW1hcmdpbi10b3A6NnB4Ow0KCQl9DQoJCS5mb290ZXItaGVhZGxpbmV7DQoJCQltYXJnaW4tYm90dG9tOjM2cHg7DQoJCQltYXJnaW4tdG9wOjhweDsNCgkJfQ0KCQkuc29jaWFsLWljb257DQoJCQltYXJnaW4tcmlnaHQ6MTBweDsNCgkJfQ0KCQkuY2VudGVyew0KCQkJZGlzcGxheTpibG9jazsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCSNmb290ZXJ7DQoJCQljb2xvcjojY2ZiNTkyICFpbXBvcnRhbnQ7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZToxNnB4Ow0KCQkJbGluZS1oZWlnaHQ6MTQwJTsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7DQoJCQltYXJnaW4tYm90dG9tOjI0cHg7DQoJCQltYXJnaW4tdG9wOjEycHg7DQoJCX0NCgkJI2Zvb3RlciBhew0KCQkJY29sb3I6I2NmYjU5MjsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQl9DQoJCSNmb290ZXIgaW1new0KCQkJbWFyZ2luLWJvdHRvbToyNHB4Ow0KCQkJbWFyZ2luLXRvcDoyNHB4Ow0KCQl9DQoJCS5wcmVoZWFkZXJDb250ZW50IGRpdiBhOmxpbmssLnByZWhlYWRlckNvbnRlbnQgZGl2IGE6dmlzaXRlZHsNCgkJCWNvbG9yOiMzMzY2OTk7DQoJCQlmb250LXdlaWdodDpub3JtYWw7DQoJCQl0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOw0KCQl9DQoJCSN0ZW1wbGF0ZUhlYWRlcnsNCgkJCWJvcmRlci1ib3R0b206MDsNCgkJfQ0KCQkuYm9keUNvbnRlbnR7DQoJCQliYWNrZ3JvdW5kLWNvbG9yOiNmZmY7DQoJCX0NCgkJLnNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoxMHB4Ow0KCQkJd2lkdGg6MTAwJTsNCgkJfQ0KCQkubHJnLXNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoyMHB4Ow0KCQkJd2lkdGg6MTAwJTsNCgkJfQ0KCQkuc3RkLXNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoxcHg7DQoJCQl3aWR0aDoxMDAlOw0KCQl9DQoJCWgxIGEsLmgxIGEsaDIgYSwuaDIgYSxoMyBhLC5oMyBhLGg0IGEsLmg0IGEsaDUgYSwuaDUgYXsNCgkJCWNvbG9yOiMzODJjMTQ7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJfQ0KCQlwIGEsLnAgYXsNCgkJCWNvbG9yOiMzMzM7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJfQ0KCQloNiBhLC5oNiBhew0KCQkJY29sb3I6IzUzYjE5ZjsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjE0cHg7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjA0ZW07DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuc3BvbnNvcnNoaXAgcCBzdHJvbmcsLnNwb25zb3JzaGlwIC5wIHN0cm9uZ3sNCgkJCWNvbG9yOiNiZDgwNGE7DQoJCX0NCgkJLnNwb25zb3JoaXAgaDIsLnNwb25zb3JzaGlwIC5oMnsNCgkJCW1hcmdpbi10b3A6OHB4Ow0KCQl9DQoJCS5zcG9uc29yaGlwIGg1LC5zcG9uc29yc2hpcCAuaDV7DQoJCQljb2xvcjojYmQ4MDRhOw0KCQkJZm9udC1zaXplOjE0cHg7DQoJCQlsZXR0ZXItc3BhY2luZzouMDRlbTsNCgkJCW1hcmdpbi1ib3R0b206MDsNCgkJCW1hcmdpbi10b3A6MzVweDsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuaXRlbS1zdXBlcnRpdGxlLC5pdGVtLXN1cGVydGl0bGUgYSwuaXRlbS1ib2R5LWxpbmsgYSwuaXRlbS1ib2R5LWxpbmt7DQoJCQlmb250LXNpemU6MTVweDsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC13ZWlnaHQ6NjAwOw0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjEyZW07DQoJCQl0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7DQoJCQljb2xvcjppbmhlcml0Ow0KCQl9DQoJCS5ldmVudC1kYXRlLC5jaXR5LXRpdGxlLC5jaXR5LXRpdGxlIGEsLmV2ZW50LWJvZHktbGluaywuZXZlbnQtYm9keS1saW5rIGEsLmV2ZW50LXN1YnRpdGxlLWN0YSwuZXZlbnQtc3VidGl0bGUtY3RhIGF7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWNvbG9yOiNkODQ4NzU7DQoJCQlmb250LXdlaWdodDo2MDA7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlsZXR0ZXItc3BhY2luZzouMTJlbTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuZXZlbnQtZGF0ZSBhew0KCQkJY29sb3I6I2Q4NDg3NTsNCgkJfQ0KCQkuZXZlbnQtYm9keS1saW5rew0KCQkJZm9udC1zaXplOjE1cHg7DQoJCX0NCgkJLmV2ZW50LWJvZHktbGluazpob3ZlciwuZXZlbnQtYm9keS1saW5rOmZvY3VzLC5ldmVudC1ib2R5LWxpbmsgYTpob3ZlciwuZXZlbnQtYm9keS1saW5rIGE6Zm9jdXN7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCWNvbG9yOiMwMDA7DQoJCX0NCgkJLml0ZW0tYm9keS1saW5rOmhvdmVyLC5pdGVtLWJvZHktbGluazpmb2N1cywuaXRlbS1ib2R5LWxpbmsgYTpob3ZlciwuaXRlbS1ib2R5LWxpbmsgYTpmb2N1c3sNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7DQoJCQljb2xvcjojMDAwICFpbXBvcnRhbnQ7DQoJCX0NCgkJLml0ZW06aG92ZXIsLml0ZW06Zm9jdXN7DQoJCQljdXJzb3I6cG9pbnRlcjsNCgkJfQ0KCQkuaXRlbTpob3ZlciAuZXZlbnQtYm9keS1saW5rLC5pdGVtOmZvY3VzIC5ldmVudC1ib2R5LWxpbmt7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50Ow0KCQkJY29sb3I6IzAwMCAhaW1wb3J0YW50Ow0KCQl9DQoJCS5ldmVudC1kYXRlLC5pdGVtLXN1cGVydGl0bGV7DQoJCQltYXJnaW4tYm90dG9tOjZweDsNCgkJCWZvbnQtc2l6ZToxNXB4Ow0KCQl9DQoJCS5jaXR5LXRpdGxlew0KCQkJZm9udC1zaXplOjE3cHg7DQoJCX0NCgkJLmV2ZW50LWJvZHktbGluaywuaXRlbS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjIwcHg7DQoJCQlkaXNwbGF5OmlubGluZS1ibG9jazsNCgkJfQ0KCQkuZXZlbnQtaGVhZGVyLC5jYXJkLWhlYWRlcnsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJcGFkZGluZzowIDEwcHg7DQoJCQltYXJnaW4tYm90dG9tOi00cHg7DQoJCX0NCgkJLmV2ZW50LWJ1dHRvbnsNCgkJCXdpZHRoOjEwMCU7DQoJCQltaW4td2lkdGg6MTAwJTsNCgkJCWJhY2tncm91bmQ6IzUwNDE2ZDsNCgkJCWNvbG9yOiNmZmY7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZToxNXB4Ow0KCQkJZm9udC13ZWlnaHQ6NjAwOw0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjEyZW07DQoJCQl0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7DQoJCQlkaXNwbGF5OmJsb2NrOw0KCQkJcGFkZGluZzoxNnB4IDA7DQoJCQl0ZXh0LWFsaWduOmNlbnRlcjsNCgkJCW1hcmdpbjowIGF1dG87DQoJCX0NCgkJLmV2ZW50LWJ1dHRvbjpob3ZlciwuZXZlbnQtYnV0dG9uOmZvY3Vzew0KCQkJYmFja2dyb3VuZDojNDAzNDU3Ow0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCX0NCgkJLmNhbi1oaWRlew0KCQkJcGFkZGluZzozMnB4IDMycHggMDsNCgkJfQ0KCQkuaXRlbS1pbWFnZXsNCgkJCW1hcmdpbi1ib3R0b206MzJweDsNCgkJfQ0KCQkubGV0dGVyaGVhZC1zcGFjZXJ7DQoJCQliYWNrZ3JvdW5kOiNmNWY0ZjM7DQoJCQloZWlnaHQ6MThweDsNCgkJCXdpZHRoOjEwMCU7DQoJCX0NCgkJLmd1aWxsZW1ldHsNCgkJCXZlcnRpY2FsLWFsaWduOnRleHQtdG9wOw0KCQl9DQoJCS5pdGVtLXN1cGVydGl0bGUucGxhY2UsLml0ZW0tc3VwZXJ0aXRsZS5wbGFjZSBhew0KCQkJY29sb3I6IzUzYjE5ZjsNCgkJfQ0KCQkuaXRlbS1ib2R5LWxpbmsucGxhY2UsLml0ZW0tYm9keS1saW5rLnBsYWNlIGF7DQoJCQljb2xvcjojMWI2MjRmOw0KCQl9DQoJCS5pdGVtLXN1cGVydGl0bGUucHJvbW8sLml0ZW0tc3VwZXJ0aXRsZS5wcm9tbyBhLC5pdGVtLWJvZHktbGluay5wcm9tbywuaXRlbS1ib2R5LWxpbmsucHJvbW8gYXsNCgkJCWNvbG9yOiNiZDgwNGE7DQoJCX0NCgkJLmV2ZW50LWxpc3Rzew0KCQkJbWFyZ2luLXRvcDoyNHB4Ow0KCQkJcGFkZGluZzowIDJweDsNCgkJfQ0KCQkuZXZlbnQtYm9keS1saXN0ew0KCQkJbWFyZ2luLWJvdHRvbToxOXB4Ow0KCQl9DQoJCS5ldmVudC1saXN0LWl0ZW17DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLFNlcmlmOw0KCQkJZm9udC1zaXplOjE5cHg7DQoJCQlsaW5lLWhlaWdodDoyNHB4Ow0KCQkJdGV4dC1hbGlnbjpsZWZ0Ow0KCQkJbWFyZ2luLWJvdHRvbTo1cHg7DQoJCX0NCgkJLmV2ZW50LWxpc3QtaXRlbSBhew0KCQkJY29sb3I6IzAwMDsNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCX0NCgkJLmZsb2F0LXJpZ2h0ew0KCQkJZmxvYXQ6cmlnaHQ7DQoJCX0NCgkJLmltZy13cmFwcGluZy1saW5rew0KCQkJbGluZS1oZWlnaHQ6MDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQliYWNrZ3JvdW5kOnRyYW5zcGFyZW50Ow0KCQl9DQoJCS5hZC13cmFwew0KCQkJYmFja2dyb3VuZDojZjVmNGYzOw0KCQkJcGFkZGluZy10b3A6MjBweDsNCgkJCXBhZGRpbmctYm90dG9tOjE1cHg7DQoJCX0NCgkJLmFkLW5vdGljZXsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJZm9udC1mYW1pbHk6ImhlbHZldGljYSIsImFyaWFsIixzYW5zLXNlcmlmOw0KCQkJZm9udC1zaXplOjlweDsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJCW9wYWNpdHk6LjY7DQoJCQltYXJnaW4tYm90dG9tOjNweDsNCgkJCWxldHRlci1zcGFjaW5nOi4wNGVtOw0KCQl9DQoJCS5jZW50ZXItYWxpZ25lZHsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCS5ldmVudC1zdWJ0aXRsZS1jdGF7DQoJCQltYXJnaW4tdG9wOjEwcHg7DQoJCQlmb250LXNpemU6MTVweDsNCgkJfQ0KCQlhew0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCX0NCgkJYTpob3ZlcnsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQl9DQoJCWJvZHl7DQoJCQliYWNrZ3JvdW5kOiNmNWY0ZjM7DQoJCQl3aWR0aDoxMDAlICFpbXBvcnRhbnQ7DQoJCX0NCgkJYm9keXsNCgkJCS13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lOw0KCQl9DQoJCWJvZHl7DQoJCQltYXJnaW46MDsNCgkJCXBhZGRpbmc6MDsNCgkJfQ0KCQlpbWd7DQoJCQlib3JkZXI6bm9uZTsNCgkJCWZvbnQtc2l6ZToxNHB4Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWhlaWdodDphdXRvOw0KCQkJbGluZS1oZWlnaHQ6MTAwJTsNCgkJCW91dGxpbmU6bm9uZTsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQkJdGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZTsNCgkJfQ0KCQkjYmFja2dyb3VuZFRhYmxlew0KCQkJaGVpZ2h0OjEwMCUgIWltcG9ydGFudDsNCgkJCW1hcmdpbjowOw0KCQkJcGFkZGluZzowOw0KCQkJd2lkdGg6MTAwJSAhaW1wb3J0YW50Ow0KCQl9DQoJCSN0ZW1wbGF0ZUNvbnRhaW5lcnsNCgkJCWJvcmRlcjpub25lOw0KCQl9DQoJCS5ibHVyYnsNCgkJCWNvbG9yOiNmNWY0ZjM7DQoJCQlmb250LXNpemU6MTFweDsNCgkJfQ0KCQkudGl0bGV7DQoJCQltYXJnaW4tdG9wOjI0cHg7DQoJCX0NCgkJaDEsLmgxew0KCQkJY29sb3I6IzM4MmMxNDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZTo0MnB4Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWxpbmUtaGVpZ2h0OjFlbTsNCgkJCW1hcmdpbi10b3A6LTRweDsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjAyZW07DQoJCX0NCgkJaDIsLmgyew0KCQkJY29sb3I6IzM4MmMxNDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtd2VpZ2h0OmJvbGQ7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlmb250LXNpemU6MzlweDsNCgkJCWxldHRlci1zcGFjaW5nOi4wMmVtOw0KCQkJdGV4dC1hbGlnbjpjZW50ZXI7DQoJCX0NCgkJaDMsLmgzew0KCQkJY29sb3I6IzM4MmMxNCAhaW1wb3J0YW50Ow0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWZvbnQtc2l6ZTozMnB4Ow0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQl9DQoJCWg0LC5oNHsNCgkJCWNvbG9yOiMzODJjMTQ7DQoJCQlkaXNwbGF5OmJsb2NrOw0KCQkJZm9udC1mYW1pbHk6IkhlbHZldGljYSBOZXVlIiwiSGVsdmV0aWNhIiwnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGluZS1oZWlnaHQ6MzBweDsNCgkJCW1hcmdpbi1ib3R0b206MnB4Ow0KCQkJdGV4dC1hbGlnbjpjZW50ZXI7DQoJCQlmb250LXNpemU6MjRweDsNCgkJCWxldHRlci1zcGFjaW5nOi0uMDFlbTsNCgkJfQ0KCQloNSwuaDV7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjE3cHg7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGluZS1oZWlnaHQ6MTAwJTsNCgkJCW1hcmdpbi1ib3R0b206MjZweDsNCgkJCW1hcmdpbi10b3A6MTJweDsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCXAsLnAsLnBBbHR7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OlRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWY7DQoJCQlmb250LXNpemU6MTlweDsNCgkJCWxpbmUtaGVpZ2h0OjI0cHg7DQoJCQltYXJnaW4tdG9wOjI0cHg7DQoJCQlwYWRkaW5nLWxlZnQ6MnB4Ow0KCQkJcGFkZGluZy1yaWdodDoycHg7DQoJCQl0ZXh0LWFsaWduOmxlZnQ7DQoJCX0NCgkJLnByZWhlYWRlckNvbnRlbnQgZGl2ew0KCQkJY29sb3I6IzgwODA4MDsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjExcHg7DQoJCQltYXJnaW4tYm90dG9tOjMwcHg7DQoJCQl0ZXh0LWFsaWduOmNlbnRlcjsNCgkJCXBhZGRpbmc6MTNweCAwIDdweDsNCgkJfQ0KCQkuaWNvbnsNCgkJCW1hcmdpbi1ib3R0b206MTZweDsNCgkJCW1hcmdpbi10b3A6NnB4Ow0KCQl9DQoJCS5mb290ZXItaGVhZGxpbmV7DQoJCQltYXJnaW4tYm90dG9tOjM2cHg7DQoJCQltYXJnaW4tdG9wOjhweDsNCgkJfQ0KCQkuc29jaWFsLWljb257DQoJCQltYXJnaW4tcmlnaHQ6MTBweDsNCgkJfQ0KCQkuY2VudGVyew0KCQkJZGlzcGxheTpibG9jazsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCSNmb290ZXJ7DQoJCQljb2xvcjojY2ZiNTkyICFpbXBvcnRhbnQ7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZToxNnB4Ow0KCQkJbGluZS1oZWlnaHQ6MTQwJTsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7DQoJCQltYXJnaW4tYm90dG9tOjI0cHg7DQoJCQltYXJnaW4tdG9wOjEycHg7DQoJCX0NCgkJI2Zvb3RlciBhew0KCQkJY29sb3I6I2NmYjU5MjsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQl9DQoJCSNmb290ZXIgaW1new0KCQkJbWFyZ2luLWJvdHRvbToyNHB4Ow0KCQkJbWFyZ2luLXRvcDoyNHB4Ow0KCQl9DQoJCS5wcmVoZWFkZXJDb250ZW50IGRpdiBhOmxpbmssLnByZWhlYWRlckNvbnRlbnQgZGl2IGE6dmlzaXRlZHsNCgkJCWNvbG9yOiMzMzY2OTk7DQoJCQlmb250LXdlaWdodDpub3JtYWw7DQoJCQl0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOw0KCQl9DQoJCSN0ZW1wbGF0ZUhlYWRlcnsNCgkJCWJvcmRlci1ib3R0b206MDsNCgkJfQ0KCQkuYm9keUNvbnRlbnR7DQoJCQliYWNrZ3JvdW5kLWNvbG9yOiNmZmY7DQoJCX0NCgkJLnNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoxMHB4Ow0KCQkJd2lkdGg6MTAwJTsNCgkJfQ0KCQkubHJnLXNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoyMHB4Ow0KCQkJd2lkdGg6MTAwJTsNCgkJfQ0KCQkuc3RkLXNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoxcHg7DQoJCQl3aWR0aDoxMDAlOw0KCQl9DQoJCWgxIGEsLmgxIGEsaDIgYSwuaDIgYSxoMyBhLC5oMyBhLGg0IGEsLmg0IGEsaDUgYSwuaDUgYXsNCgkJCWNvbG9yOiMzODJjMTQ7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJfQ0KCQlwIGEsLnAgYXsNCgkJCWNvbG9yOiMzMzM7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJfQ0KCQloNiBhLC5oNiBhew0KCQkJY29sb3I6IzUzYjE5ZjsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjE0cHg7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjA0ZW07DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuc3BvbnNvcnNoaXAgcCBzdHJvbmcsLnNwb25zb3JzaGlwIC5wIHN0cm9uZ3sNCgkJCWNvbG9yOiNiZDgwNGE7DQoJCX0NCgkJLnNwb25zb3JoaXAgaDIsLnNwb25zb3JzaGlwIC5oMnsNCgkJCW1hcmdpbi10b3A6OHB4Ow0KCQl9DQoJCS5zcG9uc29yaGlwIGg1LC5zcG9uc29yc2hpcCAuaDV7DQoJCQljb2xvcjojYmQ4MDRhOw0KCQkJZm9udC1zaXplOjE0cHg7DQoJCQlsZXR0ZXItc3BhY2luZzouMDRlbTsNCgkJCW1hcmdpbi1ib3R0b206MDsNCgkJCW1hcmdpbi10b3A6MzVweDsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuaXRlbS1zdXBlcnRpdGxlLC5pdGVtLXN1cGVydGl0bGUgYSwuaXRlbS1ib2R5LWxpbmsgYSwuaXRlbS1ib2R5LWxpbmt7DQoJCQlmb250LXNpemU6MTVweDsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC13ZWlnaHQ6NjAwOw0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjEyZW07DQoJCQl0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7DQoJCQljb2xvcjppbmhlcml0Ow0KCQl9DQoJCS5ldmVudC1kYXRlLC5jaXR5LXRpdGxlLC5jaXR5LXRpdGxlIGEsLmV2ZW50LWJvZHktbGluaywuZXZlbnQtYm9keS1saW5rIGEsLmV2ZW50LXN1YnRpdGxlLWN0YSwuZXZlbnQtc3VidGl0bGUtY3RhIGF7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWNvbG9yOiNkODQ4NzU7DQoJCQlmb250LXdlaWdodDo2MDA7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlsZXR0ZXItc3BhY2luZzouMTJlbTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuZXZlbnQtZGF0ZSBhew0KCQkJY29sb3I6I2Q4NDg3NTsNCgkJfQ0KCQkuZXZlbnQtYm9keS1saW5rew0KCQkJZm9udC1zaXplOjE1cHg7DQoJCX0NCgkJLmV2ZW50LWJvZHktbGluazpob3ZlciwuZXZlbnQtYm9keS1saW5rOmZvY3VzLC5ldmVudC1ib2R5LWxpbmsgYTpob3ZlciwuZXZlbnQtYm9keS1saW5rIGE6Zm9jdXN7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCWNvbG9yOiMwMDA7DQoJCX0NCgkJLml0ZW0tYm9keS1saW5rOmhvdmVyLC5pdGVtLWJvZHktbGluazpmb2N1cywuaXRlbS1ib2R5LWxpbmsgYTpob3ZlciwuaXRlbS1ib2R5LWxpbmsgYTpmb2N1c3sNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7DQoJCQljb2xvcjojMDAwICFpbXBvcnRhbnQ7DQoJCX0NCgkJLml0ZW06aG92ZXIsLml0ZW06Zm9jdXN7DQoJCQljdXJzb3I6cG9pbnRlcjsNCgkJfQ0KCQkuaXRlbTpob3ZlciAuZXZlbnQtYm9keS1saW5rLC5pdGVtOmZvY3VzIC5ldmVudC1ib2R5LWxpbmt7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50Ow0KCQkJY29sb3I6IzAwMCAhaW1wb3J0YW50Ow0KCQl9DQoJCS5ldmVudC1kYXRlLC5pdGVtLXN1cGVydGl0bGV7DQoJCQltYXJnaW4tYm90dG9tOjZweDsNCgkJCWZvbnQtc2l6ZToxNXB4Ow0KCQl9DQoJCS5jaXR5LXRpdGxlew0KCQkJZm9udC1zaXplOjE3cHg7DQoJCX0NCgkJLmV2ZW50LWJvZHktbGluaywuaXRlbS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjIwcHg7DQoJCQlkaXNwbGF5OmlubGluZS1ibG9jazsNCgkJfQ0KCQkuZXZlbnQtaGVhZGVyLC5jYXJkLWhlYWRlcnsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJcGFkZGluZzowIDEwcHg7DQoJCQltYXJnaW4tYm90dG9tOi00cHg7DQoJCX0NCgkJLmV2ZW50LWJ1dHRvbnsNCgkJCXdpZHRoOjEwMCU7DQoJCQltaW4td2lkdGg6MTAwJTsNCgkJCWJhY2tncm91bmQ6IzUwNDE2ZDsNCgkJCWNvbG9yOiNmZmY7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZToxNXB4Ow0KCQkJZm9udC13ZWlnaHQ6NjAwOw0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjEyZW07DQoJCQl0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7DQoJCQlkaXNwbGF5OmJsb2NrOw0KCQkJcGFkZGluZzoxNnB4IDA7DQoJCQl0ZXh0LWFsaWduOmNlbnRlcjsNCgkJCW1hcmdpbjowIGF1dG87DQoJCX0NCgkJLmV2ZW50LWJ1dHRvbjpob3ZlciwuZXZlbnQtYnV0dG9uOmZvY3Vzew0KCQkJYmFja2dyb3VuZDojNDAzNDU3Ow0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCX0NCgkJLmNhbi1oaWRlew0KCQkJcGFkZGluZzozMnB4IDMycHggMDsNCgkJfQ0KCQkuaXRlbS1pbWFnZXsNCgkJCW1hcmdpbi1ib3R0b206MzJweDsNCgkJfQ0KCQkubGV0dGVyaGVhZC1zcGFjZXJ7DQoJCQliYWNrZ3JvdW5kOiNmNWY0ZjM7DQoJCQloZWlnaHQ6MThweDsNCgkJCXdpZHRoOjEwMCU7DQoJCX0NCgkJLmd1aWxsZW1ldHsNCgkJCXZlcnRpY2FsLWFsaWduOnRleHQtdG9wOw0KCQl9DQoJCS5pdGVtLXN1cGVydGl0bGUucGxhY2UsLml0ZW0tc3VwZXJ0aXRsZS5wbGFjZSBhew0KCQkJY29sb3I6IzUzYjE5ZjsNCgkJfQ0KCQkuaXRlbS1ib2R5LWxpbmsucGxhY2UsLml0ZW0tYm9keS1saW5rLnBsYWNlIGF7DQoJCQljb2xvcjojMWI2MjRmOw0KCQl9DQoJCS5pdGVtLXN1cGVydGl0bGUucHJvbW8sLml0ZW0tc3VwZXJ0aXRsZS5wcm9tbyBhLC5pdGVtLWJvZHktbGluay5wcm9tbywuaXRlbS1ib2R5LWxpbmsucHJvbW8gYXsNCgkJCWNvbG9yOiNiZDgwNGE7DQoJCX0NCgkJLmV2ZW50LWxpc3Rzew0KCQkJbWFyZ2luLXRvcDoyNHB4Ow0KCQkJcGFkZGluZzowIDJweDsNCgkJfQ0KCQkuZXZlbnQtYm9keS1saXN0ew0KCQkJbWFyZ2luLWJvdHRvbToxOXB4Ow0KCQl9DQoJCS5ldmVudC1saXN0LWl0ZW17DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLFNlcmlmOw0KCQkJZm9udC1zaXplOjE5cHg7DQoJCQlsaW5lLWhlaWdodDoyNHB4Ow0KCQkJdGV4dC1hbGlnbjpsZWZ0Ow0KCQkJbWFyZ2luLWJvdHRvbTo1cHg7DQoJCX0NCgkJLmV2ZW50LWxpc3QtaXRlbSBhew0KCQkJY29sb3I6IzAwMDsNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCX0NCgkJLmZsb2F0LXJpZ2h0ew0KCQkJZmxvYXQ6cmlnaHQ7DQoJCX0NCgkJLmltZy13cmFwcGluZy1saW5rew0KCQkJbGluZS1oZWlnaHQ6MDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQliYWNrZ3JvdW5kOnRyYW5zcGFyZW50Ow0KCQl9DQoJCS5hZC13cmFwew0KCQkJYmFja2dyb3VuZDojZjVmNGYzOw0KCQkJcGFkZGluZy10b3A6MjBweDsNCgkJCXBhZGRpbmctYm90dG9tOjE1cHg7DQoJCX0NCgkJLmFkLW5vdGljZXsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJZm9udC1mYW1pbHk6ImhlbHZldGljYSIsImFyaWFsIixzYW5zLXNlcmlmOw0KCQkJZm9udC1zaXplOjlweDsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJCW9wYWNpdHk6LjY7DQoJCQltYXJnaW4tYm90dG9tOjNweDsNCgkJCWxldHRlci1zcGFjaW5nOi4wNGVtOw0KCQl9DQoJCS5jZW50ZXItYWxpZ25lZHsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCS5ldmVudC1zdWJ0aXRsZS1jdGF7DQoJCQltYXJnaW4tdG9wOjEwcHg7DQoJCQlmb250LXNpemU6MTVweDsNCgkJfQ0KCQkuc3BhY2Vyew0KCQkJaGVpZ2h0OjEycHg7DQoJCX0NCgkJLmxyZy1zcGFjZXJ7DQoJCQloZWlnaHQ6MjRweDsNCgkJfQ0KCQkubmV3c2xldHRlci10aXRsZXsNCgkJCXRleHQtYWxpZ246bGVmdDsNCgkJCW1hcmdpbjowOw0KCQl9DQoJCS5uZXdzbGV0dGVyLWRhdGV7DQoJCQlmb250LXNpemU6MTZweDsNCgkJCWxpbmUtaGVpZ2h0OjA7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTppbmxpbmUtdGFibGU7DQoJCQl3aGl0ZS1zcGFjZTpub3dyYXA7DQoJCQlmb250LWZhbWlseTpUaW1lc05ld1JvbWFuLFRpbWVzIE5ldyBSb21hbixUaW1lcyxCYXNrZXJ2aWxsZSxHZW9yZ2lhLHNlcmlmOw0KCQl9DQoJCS5hcnRpY2xlLWNhcmQtYm9keSBzdHJvbmd7DQoJCQljb2xvcjojMDA5YmJmOw0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJfQ0KCQkuYXJ0aWNsZS1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZXsNCgkJCWRpc3BsYXk6bm9uZSAhaW1wb3J0YW50Ow0KCQl9DQoJCS5hcnRpY2xlLWNhcmQtYm9keSAucHsNCgkJCW1hcmdpbi1ib3R0b206MDsNCgkJfQ0KCQkudXNlci1waG90by1jYXJkIC5wew0KCQkJbWFyZ2luLWJvdHRvbTowOw0KCQl9DQoJCS51c2VyLXBob3RvLWNhcmQgLnAgYXsNCgkJCWNvbG9yOiM1M2IxOWY7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQl9DQoJCS51c2VyLXBob3RvLWNhcmQgLnAgYTpob3ZlciwudXNlci1waG90by1jYXJkIC5wIGE6Zm9jdXN7DQoJCQl0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOw0KCQl9DQoJCS51c2VyLXBob3RvLWNhcmQgLmNhcmQtaGVhZGVyIHN0cm9uZ3sNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCQljb2xvcjppbml0aWFsOw0KCQl9DQoJCS5wbGFjZS1jYXJkLWJvZHkgc3Ryb25nLC5pdGVtLWJvZHktbGluay5wbGFjZSwuaXRlbS1ib2R5LWxpbmsucGxhY2UgYXsNCgkJCWNvbG9yOiM1M2IxOWY7DQoJCX0NCgkJLmNvbnRlbnQtc3dhcC1jYXJkLWJvZHkgLml0ZW0tYm9keS1saW5rLC5jb250ZW50LXN3YXAtY2FyZC1ib2R5IC5pdGVtLWJvZHktbGluayBhLC5jb250ZW50LXN3YXAtY2FyZC1ib2R5IC5pdGVtLXN1cGVydGl0bGUsLmNvbnRlbnQtc3dhcC1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZSBhew0KCQkJY29sb3I6I2QzNmE1NTsNCgkJfQ0KCQkuc3BvbnNvci1jYXJkLWJvZHkgLml0ZW0tYm9keS1saW5rLC5zcG9uc29yLWNhcmQtYm9keSAuaXRlbS1ib2R5LWxpbmsgYSwuc3BvbnNvci1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZSwuc3BvbnNvci1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZSBhew0KCQkJY29sb3I6I2NjYjQ4ZDsNCgkJfQ0KCQkuaXRlbS1zdXBlcnRpdGxlLnBsYWNlLC5pdGVtLXN1cGVydGl0bGUucGxhY2UgYXsNCgkJCWNvbG9yOiMxYjYyNGY7DQoJCX0NCgkJLmZvb2QtY2FyZC1ib2R5IHN0cm9uZywuaXRlbS1zdXBlcnRpdGxlLmZvb2QsLml0ZW0tc3VwZXJ0aXRsZS5mb29kIGEsLml0ZW0tYm9keS1saW5rLmZvb2R7DQoJCQljb2xvcjojZjNjYjAwOw0KCQl9DQoJCS50aGVtZXdlZWstaW1nLXdyYXB7DQoJCQlwYWRkaW5nOjMycHggMzJweCAwOw0KCQl9DQoJCS50aGVtZXdlZWstaW1new0KCQkJbWF4LXdpZHRoOjYwJTsNCgkJCW1heC1oZWlnaHQ6NTBweDsNCgkJfQ0KCQkuaXRlbS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjA7DQoJCX0NCgkJLmxpbmtlZC1jYXJkOmhvdmVyIHN0cm9uZ3sNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCX0NCgkJLmxpbmtlZC1jYXJkOmhvdmVyew0KCQkJY3Vyc29yOnBvaW50ZXIgIWltcG9ydGFudDsNCgkJfQ0KCQkuc3BvbnNvci10aXRsZSwuc3BvbnNvci10aXRsZSBhew0KCQkJZm9udC1zaXplOjE1cHg7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdDZW50dXJ5IEdvdGhpYycsJ0NlbnR1cnlHb3RoaWMnLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90byc7DQoJCQlmb250LXdlaWdodDo2MDA7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlsZXR0ZXItc3BhY2luZzouMTJlbTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJCWNvbG9yOiNjY2I0OGQ7DQoJCX0NCgkJLnNwb25zb3ItdGl0bGUgYTpob3Zlciwuc3BvbnNvci10aXRsZSBhOmZvY3Vzew0KCQkJY29sb3I6I2NjYjQ4ZDsNCgkJfQ0KCQkud2l0aC10b3AtaHJ7DQoJCQlwYWRkaW5nOjEycHg7DQoJCQlib3JkZXItdG9wOjFweCBzb2xpZCAjY2NjOw0KCQl9DQoJCS5mb3J1bS1jYXJkLWJnew0KCQkJYmFja2dyb3VuZC1jb2xvcjojRUZFOERDOw0KCQkJcGFkZGluZzo5OHB4IDMwcHggMjRweDsNCgkJfQ0KCQkuZm9ydW0tY2FyZC1pY29uLXdyYXB7DQoJCQltYXgtaGVpZ2h0OjQwcHg7DQoJCQlwYWRkaW5nLWxlZnQ6MzBweDsNCgkJfQ0KCQkuZm9ydW0tcXVvdGUsLmZvcnVtLXF1b3RlIGF7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCWNvbG9yOiMzODJDMTQ7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdDZW50dXJ5IEdvdGhpYycsJ0NlbnR1cnlHb3RoaWMnLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90byc7DQoJCQlmb250LXNpemU6MjRweDsNCgkJCWZvbnQtd2VpZ2h0OjcwMDsNCgkJCWxpbmUtaGVpZ2h0OjMwcHg7DQoJCQltYXJnaW4tYm90dG9tOjE0cHg7DQoJCX0NCgkJLmZvcnVtLWF0dHJpYnV0aW9uLC5mb3J1bS1hdHRyaWJ1dGlvbiBhew0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCQljb2xvcjojODU4NTg1Ow0KCQkJZm9udC1mYW1pbHk6IkhlbHZldGljYSBOZXVlIiwiSGVsdmV0aWNhIiwnQ2VudHVyeSBHb3RoaWMnLCdDZW50dXJ5R290aGljJywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nOw0KCQkJZm9udC1zaXplOjIwcHg7DQoJCQlmb250LXdlaWdodDo0MDA7DQoJCQlsZXR0ZXItc3BhY2luZzoxcHg7DQoJCQlsaW5lLWhlaWdodDoxNnB4Ow0KCQl9DQoJCS5mb3J1bS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjM4cHg7DQoJCX0NCgkJLmZvcnVtLWNvbnRlbnQtcGFkZGVkew0KCQkJcGFkZGluZy1sZWZ0OjEwcHg7DQoJCQlwYWRkaW5nLXJpZ2h0OjEwcHg7DQoJCX0NCgkJLnF1b3RlLWVtLWRhc2h7DQoJCQlwYWRkaW5nLXJpZ2h0OjRweDsNCgkJfQ0KCQlhew0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCX0NCgkJYTpob3ZlcnsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQl9DQoJCWJvZHl7DQoJCQliYWNrZ3JvdW5kOiNmNWY0ZjM7DQoJCQl3aWR0aDoxMDAlICFpbXBvcnRhbnQ7DQoJCX0NCgkJYm9keXsNCgkJCS13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lOw0KCQl9DQoJCWJvZHl7DQoJCQltYXJnaW46MDsNCgkJCXBhZGRpbmc6MDsNCgkJfQ0KCQlpbWd7DQoJCQlib3JkZXI6bm9uZTsNCgkJCWZvbnQtc2l6ZToxNHB4Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWhlaWdodDphdXRvOw0KCQkJbGluZS1oZWlnaHQ6MTAwJTsNCgkJCW91dGxpbmU6bm9uZTsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQkJdGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZTsNCgkJfQ0KCQkjYmFja2dyb3VuZFRhYmxlew0KCQkJaGVpZ2h0OjEwMCUgIWltcG9ydGFudDsNCgkJCW1hcmdpbjowOw0KCQkJcGFkZGluZzowOw0KCQkJd2lkdGg6MTAwJSAhaW1wb3J0YW50Ow0KCQl9DQoJCSN0ZW1wbGF0ZUNvbnRhaW5lcnsNCgkJCWJvcmRlcjpub25lOw0KCQl9DQoJCS5ibHVyYnsNCgkJCWNvbG9yOiNmNWY0ZjM7DQoJCQlmb250LXNpemU6MTFweDsNCgkJfQ0KCQkudGl0bGV7DQoJCQltYXJnaW4tdG9wOjI0cHg7DQoJCX0NCgkJaDEsLmgxew0KCQkJY29sb3I6IzM4MmMxNDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZTo0MnB4Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWxpbmUtaGVpZ2h0OjFlbTsNCgkJCW1hcmdpbi10b3A6LTRweDsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjAyZW07DQoJCX0NCgkJaDIsLmgyew0KCQkJY29sb3I6IzM4MmMxNDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtd2VpZ2h0OmJvbGQ7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlmb250LXNpemU6MzlweDsNCgkJCWxldHRlci1zcGFjaW5nOi4wMmVtOw0KCQkJdGV4dC1hbGlnbjpjZW50ZXI7DQoJCX0NCgkJaDMsLmgzew0KCQkJY29sb3I6IzM4MmMxNCAhaW1wb3J0YW50Ow0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJCWZvbnQtc2l6ZTozMnB4Ow0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQl9DQoJCWg0LC5oNHsNCgkJCWNvbG9yOiMzODJjMTQ7DQoJCQlkaXNwbGF5OmJsb2NrOw0KCQkJZm9udC1mYW1pbHk6IkhlbHZldGljYSBOZXVlIiwiSGVsdmV0aWNhIiwnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGluZS1oZWlnaHQ6MzBweDsNCgkJCW1hcmdpbi1ib3R0b206MnB4Ow0KCQkJdGV4dC1hbGlnbjpjZW50ZXI7DQoJCQlmb250LXNpemU6MjRweDsNCgkJCWxldHRlci1zcGFjaW5nOi0uMDFlbTsNCgkJfQ0KCQloNSwuaDV7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjE3cHg7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGluZS1oZWlnaHQ6MTAwJTsNCgkJCW1hcmdpbi1ib3R0b206MjZweDsNCgkJCW1hcmdpbi10b3A6MTJweDsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCXAsLnAsLnBBbHR7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OlRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWY7DQoJCQlmb250LXNpemU6MTlweDsNCgkJCWxpbmUtaGVpZ2h0OjI0cHg7DQoJCQltYXJnaW4tdG9wOjI0cHg7DQoJCQlwYWRkaW5nLWxlZnQ6MnB4Ow0KCQkJcGFkZGluZy1yaWdodDoycHg7DQoJCQl0ZXh0LWFsaWduOmxlZnQ7DQoJCX0NCgkJLnByZWhlYWRlckNvbnRlbnQgZGl2ew0KCQkJY29sb3I6IzgwODA4MDsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjExcHg7DQoJCQltYXJnaW4tYm90dG9tOjMwcHg7DQoJCQl0ZXh0LWFsaWduOmNlbnRlcjsNCgkJCXBhZGRpbmc6MTNweCAwIDdweDsNCgkJfQ0KCQkuaWNvbnsNCgkJCW1hcmdpbi1ib3R0b206MTZweDsNCgkJCW1hcmdpbi10b3A6NnB4Ow0KCQl9DQoJCS5mb290ZXItaGVhZGxpbmV7DQoJCQltYXJnaW4tYm90dG9tOjM2cHg7DQoJCQltYXJnaW4tdG9wOjhweDsNCgkJfQ0KCQkuc29jaWFsLWljb257DQoJCQltYXJnaW4tcmlnaHQ6MTBweDsNCgkJfQ0KCQkuY2VudGVyew0KCQkJZGlzcGxheTpibG9jazsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCSNmb290ZXJ7DQoJCQljb2xvcjojY2ZiNTkyICFpbXBvcnRhbnQ7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZToxNnB4Ow0KCQkJbGluZS1oZWlnaHQ6MTQwJTsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7DQoJCQltYXJnaW4tYm90dG9tOjI0cHg7DQoJCQltYXJnaW4tdG9wOjEycHg7DQoJCX0NCgkJI2Zvb3RlciBhew0KCQkJY29sb3I6I2NmYjU5MjsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQl9DQoJCSNmb290ZXIgaW1new0KCQkJbWFyZ2luLWJvdHRvbToyNHB4Ow0KCQkJbWFyZ2luLXRvcDoyNHB4Ow0KCQl9DQoJCS5wcmVoZWFkZXJDb250ZW50IGRpdiBhOmxpbmssLnByZWhlYWRlckNvbnRlbnQgZGl2IGE6dmlzaXRlZHsNCgkJCWNvbG9yOiMzMzY2OTk7DQoJCQlmb250LXdlaWdodDpub3JtYWw7DQoJCQl0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOw0KCQl9DQoJCSN0ZW1wbGF0ZUhlYWRlcnsNCgkJCWJvcmRlci1ib3R0b206MDsNCgkJfQ0KCQkuYm9keUNvbnRlbnR7DQoJCQliYWNrZ3JvdW5kLWNvbG9yOiNmZmY7DQoJCX0NCgkJLnNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoxMHB4Ow0KCQkJd2lkdGg6MTAwJTsNCgkJfQ0KCQkubHJnLXNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoyMHB4Ow0KCQkJd2lkdGg6MTAwJTsNCgkJfQ0KCQkuc3RkLXNwYWNlcnsNCgkJCWJhY2tncm91bmQ6I2Y1ZjRmMzsNCgkJCWhlaWdodDoxcHg7DQoJCQl3aWR0aDoxMDAlOw0KCQl9DQoJCWgxIGEsLmgxIGEsaDIgYSwuaDIgYSxoMyBhLC5oMyBhLGg0IGEsLmg0IGEsaDUgYSwuaDUgYXsNCgkJCWNvbG9yOiMzODJjMTQ7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJfQ0KCQlwIGEsLnAgYXsNCgkJCWNvbG9yOiMzMzM7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJfQ0KCQloNiBhLC5oNiBhew0KCQkJY29sb3I6IzUzYjE5ZjsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC1zaXplOjE0cHg7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjA0ZW07DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuc3BvbnNvcnNoaXAgcCBzdHJvbmcsLnNwb25zb3JzaGlwIC5wIHN0cm9uZ3sNCgkJCWNvbG9yOiNiZDgwNGE7DQoJCX0NCgkJLnNwb25zb3JoaXAgaDIsLnNwb25zb3JzaGlwIC5oMnsNCgkJCW1hcmdpbi10b3A6OHB4Ow0KCQl9DQoJCS5zcG9uc29yaGlwIGg1LC5zcG9uc29yc2hpcCAuaDV7DQoJCQljb2xvcjojYmQ4MDRhOw0KCQkJZm9udC1zaXplOjE0cHg7DQoJCQlsZXR0ZXItc3BhY2luZzouMDRlbTsNCgkJCW1hcmdpbi1ib3R0b206MDsNCgkJCW1hcmdpbi10b3A6MzVweDsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuaXRlbS1zdXBlcnRpdGxlLC5pdGVtLXN1cGVydGl0bGUgYSwuaXRlbS1ib2R5LWxpbmsgYSwuaXRlbS1ib2R5LWxpbmt7DQoJCQlmb250LXNpemU6MTVweDsNCgkJCWZvbnQtZmFtaWx5OiJIZWx2ZXRpY2EgTmV1ZSIsIkhlbHZldGljYSIsJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50Ow0KCQkJZm9udC13ZWlnaHQ6NjAwOw0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjEyZW07DQoJCQl0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7DQoJCQljb2xvcjppbmhlcml0Ow0KCQl9DQoJCS5ldmVudC1kYXRlLC5jaXR5LXRpdGxlLC5jaXR5LXRpdGxlIGEsLmV2ZW50LWJvZHktbGluaywuZXZlbnQtYm9keS1saW5rIGEsLmV2ZW50LXN1YnRpdGxlLWN0YSwuZXZlbnQtc3VidGl0bGUtY3RhIGF7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWNvbG9yOiNkODQ4NzU7DQoJCQlmb250LXdlaWdodDo2MDA7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlsZXR0ZXItc3BhY2luZzouMTJlbTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJfQ0KCQkuZXZlbnQtZGF0ZSBhew0KCQkJY29sb3I6I2Q4NDg3NTsNCgkJfQ0KCQkuZXZlbnQtYm9keS1saW5rew0KCQkJZm9udC1zaXplOjE1cHg7DQoJCX0NCgkJLmV2ZW50LWJvZHktbGluazpob3ZlciwuZXZlbnQtYm9keS1saW5rOmZvY3VzLC5ldmVudC1ib2R5LWxpbmsgYTpob3ZlciwuZXZlbnQtYm9keS1saW5rIGE6Zm9jdXN7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCWNvbG9yOiMwMDA7DQoJCX0NCgkJLml0ZW0tYm9keS1saW5rOmhvdmVyLC5pdGVtLWJvZHktbGluazpmb2N1cywuaXRlbS1ib2R5LWxpbmsgYTpob3ZlciwuaXRlbS1ib2R5LWxpbmsgYTpmb2N1c3sNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7DQoJCQljb2xvcjojMDAwICFpbXBvcnRhbnQ7DQoJCX0NCgkJLml0ZW06aG92ZXIsLml0ZW06Zm9jdXN7DQoJCQljdXJzb3I6cG9pbnRlcjsNCgkJfQ0KCQkuaXRlbTpob3ZlciAuZXZlbnQtYm9keS1saW5rLC5pdGVtOmZvY3VzIC5ldmVudC1ib2R5LWxpbmt7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50Ow0KCQkJY29sb3I6IzAwMCAhaW1wb3J0YW50Ow0KCQl9DQoJCS5ldmVudC1kYXRlLC5pdGVtLXN1cGVydGl0bGV7DQoJCQltYXJnaW4tYm90dG9tOjZweDsNCgkJCWZvbnQtc2l6ZToxNXB4Ow0KCQl9DQoJCS5jaXR5LXRpdGxlew0KCQkJZm9udC1zaXplOjE3cHg7DQoJCX0NCgkJLmV2ZW50LWJvZHktbGluaywuaXRlbS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjIwcHg7DQoJCQlkaXNwbGF5OmlubGluZS1ibG9jazsNCgkJfQ0KCQkuZXZlbnQtaGVhZGVyLC5jYXJkLWhlYWRlcnsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJcGFkZGluZzowIDEwcHg7DQoJCQltYXJnaW4tYm90dG9tOi00cHg7DQoJCX0NCgkJLmV2ZW50LWJ1dHRvbnsNCgkJCXdpZHRoOjEwMCU7DQoJCQltaW4td2lkdGg6MTAwJTsNCgkJCWJhY2tncm91bmQ6IzUwNDE2ZDsNCgkJCWNvbG9yOiNmZmY7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsNCgkJCWZvbnQtc2l6ZToxNXB4Ow0KCQkJZm9udC13ZWlnaHQ6NjAwOw0KCQkJbGluZS1oZWlnaHQ6MWVtOw0KCQkJbGV0dGVyLXNwYWNpbmc6LjEyZW07DQoJCQl0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7DQoJCQlkaXNwbGF5OmJsb2NrOw0KCQkJcGFkZGluZzoxNnB4IDA7DQoJCQl0ZXh0LWFsaWduOmNlbnRlcjsNCgkJCW1hcmdpbjowIGF1dG87DQoJCX0NCgkJLmV2ZW50LWJ1dHRvbjpob3ZlciwuZXZlbnQtYnV0dG9uOmZvY3Vzew0KCQkJYmFja2dyb3VuZDojNDAzNDU3Ow0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCX0NCgkJLmNhbi1oaWRlew0KCQkJcGFkZGluZzozMnB4IDMycHggMDsNCgkJfQ0KCQkuaXRlbS1pbWFnZXsNCgkJCW1hcmdpbi1ib3R0b206MzJweDsNCgkJfQ0KCQkubGV0dGVyaGVhZC1zcGFjZXJ7DQoJCQliYWNrZ3JvdW5kOiNmNWY0ZjM7DQoJCQloZWlnaHQ6MThweDsNCgkJCXdpZHRoOjEwMCU7DQoJCX0NCgkJLmd1aWxsZW1ldHsNCgkJCXZlcnRpY2FsLWFsaWduOnRleHQtdG9wOw0KCQl9DQoJCS5pdGVtLXN1cGVydGl0bGUucGxhY2UsLml0ZW0tc3VwZXJ0aXRsZS5wbGFjZSBhew0KCQkJY29sb3I6IzUzYjE5ZjsNCgkJfQ0KCQkuaXRlbS1ib2R5LWxpbmsucGxhY2UsLml0ZW0tYm9keS1saW5rLnBsYWNlIGF7DQoJCQljb2xvcjojMWI2MjRmOw0KCQl9DQoJCS5pdGVtLXN1cGVydGl0bGUucHJvbW8sLml0ZW0tc3VwZXJ0aXRsZS5wcm9tbyBhLC5pdGVtLWJvZHktbGluay5wcm9tbywuaXRlbS1ib2R5LWxpbmsucHJvbW8gYXsNCgkJCWNvbG9yOiNiZDgwNGE7DQoJCX0NCgkJLmV2ZW50LWxpc3Rzew0KCQkJbWFyZ2luLXRvcDoyNHB4Ow0KCQkJcGFkZGluZzowIDJweDsNCgkJfQ0KCQkuZXZlbnQtYm9keS1saXN0ew0KCQkJbWFyZ2luLWJvdHRvbToxOXB4Ow0KCQl9DQoJCS5ldmVudC1saXN0LWl0ZW17DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTpibG9jazsNCgkJCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLFNlcmlmOw0KCQkJZm9udC1zaXplOjE5cHg7DQoJCQlsaW5lLWhlaWdodDoyNHB4Ow0KCQkJdGV4dC1hbGlnbjpsZWZ0Ow0KCQkJbWFyZ2luLWJvdHRvbTo1cHg7DQoJCX0NCgkJLmV2ZW50LWxpc3QtaXRlbSBhew0KCQkJY29sb3I6IzAwMDsNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCX0NCgkJLmZsb2F0LXJpZ2h0ew0KCQkJZmxvYXQ6cmlnaHQ7DQoJCX0NCgkJLmltZy13cmFwcGluZy1saW5rew0KCQkJbGluZS1oZWlnaHQ6MDsNCgkJCWRpc3BsYXk6YmxvY2s7DQoJCQliYWNrZ3JvdW5kOnRyYW5zcGFyZW50Ow0KCQl9DQoJCS5hZC13cmFwew0KCQkJYmFja2dyb3VuZDojZjVmNGYzOw0KCQkJcGFkZGluZy10b3A6MjBweDsNCgkJCXBhZGRpbmctYm90dG9tOjE1cHg7DQoJCX0NCgkJLmFkLW5vdGljZXsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQkJZm9udC1mYW1pbHk6ImhlbHZldGljYSIsImFyaWFsIixzYW5zLXNlcmlmOw0KCQkJZm9udC1zaXplOjlweDsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJCW9wYWNpdHk6LjY7DQoJCQltYXJnaW4tYm90dG9tOjNweDsNCgkJCWxldHRlci1zcGFjaW5nOi4wNGVtOw0KCQl9DQoJCS5jZW50ZXItYWxpZ25lZHsNCgkJCXRleHQtYWxpZ246Y2VudGVyOw0KCQl9DQoJCS5ldmVudC1zdWJ0aXRsZS1jdGF7DQoJCQltYXJnaW4tdG9wOjEwcHg7DQoJCQlmb250LXNpemU6MTVweDsNCgkJfQ0KCQkuc3BhY2Vyew0KCQkJaGVpZ2h0OjEycHg7DQoJCX0NCgkJLmxyZy1zcGFjZXJ7DQoJCQloZWlnaHQ6MjRweDsNCgkJfQ0KCQkubmV3c2xldHRlci10aXRsZXsNCgkJCXRleHQtYWxpZ246bGVmdDsNCgkJCW1hcmdpbjowOw0KCQl9DQoJCS5uZXdzbGV0dGVyLWRhdGV7DQoJCQlmb250LXNpemU6MTZweDsNCgkJCWxpbmUtaGVpZ2h0OjA7DQoJCQljb2xvcjojMzMzOw0KCQkJZGlzcGxheTppbmxpbmUtdGFibGU7DQoJCQl3aGl0ZS1zcGFjZTpub3dyYXA7DQoJCQlmb250LWZhbWlseTpUaW1lc05ld1JvbWFuLFRpbWVzIE5ldyBSb21hbixUaW1lcyxCYXNrZXJ2aWxsZSxHZW9yZ2lhLHNlcmlmOw0KCQl9DQoJCS5hcnRpY2xlLWNhcmQtYm9keSBzdHJvbmd7DQoJCQljb2xvcjojMDA5YmJmOw0KCQkJZm9udC13ZWlnaHQ6Ym9sZDsNCgkJfQ0KCQkuYXJ0aWNsZS1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZXsNCgkJCWRpc3BsYXk6bm9uZSAhaW1wb3J0YW50Ow0KCQl9DQoJCS5hcnRpY2xlLWNhcmQtYm9keSAucHsNCgkJCW1hcmdpbi1ib3R0b206MDsNCgkJfQ0KCQkudXNlci1waG90by1jYXJkIC5wew0KCQkJbWFyZ2luLWJvdHRvbTowOw0KCQl9DQoJCS51c2VyLXBob3RvLWNhcmQgLnAgYXsNCgkJCWNvbG9yOiM1M2IxOWY7DQoJCQlmb250LXdlaWdodDpib2xkOw0KCQl9DQoJCS51c2VyLXBob3RvLWNhcmQgLnAgYTpob3ZlciwudXNlci1waG90by1jYXJkIC5wIGE6Zm9jdXN7DQoJCQl0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOw0KCQl9DQoJCS51c2VyLXBob3RvLWNhcmQgLmNhcmQtaGVhZGVyIHN0cm9uZ3sNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCQljb2xvcjppbml0aWFsOw0KCQl9DQoJCS5wbGFjZS1jYXJkLWJvZHkgc3Ryb25nLC5pdGVtLWJvZHktbGluay5wbGFjZSwuaXRlbS1ib2R5LWxpbmsucGxhY2UgYXsNCgkJCWNvbG9yOiM1M2IxOWY7DQoJCX0NCgkJLmNvbnRlbnQtc3dhcC1jYXJkLWJvZHkgLml0ZW0tYm9keS1saW5rLC5jb250ZW50LXN3YXAtY2FyZC1ib2R5IC5pdGVtLWJvZHktbGluayBhLC5jb250ZW50LXN3YXAtY2FyZC1ib2R5IC5pdGVtLXN1cGVydGl0bGUsLmNvbnRlbnQtc3dhcC1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZSBhew0KCQkJY29sb3I6I2QzNmE1NTsNCgkJfQ0KCQkuc3BvbnNvci1jYXJkLWJvZHkgLml0ZW0tYm9keS1saW5rLC5zcG9uc29yLWNhcmQtYm9keSAuaXRlbS1ib2R5LWxpbmsgYSwuc3BvbnNvci1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZSwuc3BvbnNvci1jYXJkLWJvZHkgLml0ZW0tc3VwZXJ0aXRsZSBhew0KCQkJY29sb3I6I2NjYjQ4ZDsNCgkJfQ0KCQkuaXRlbS1zdXBlcnRpdGxlLnBsYWNlLC5pdGVtLXN1cGVydGl0bGUucGxhY2UgYXsNCgkJCWNvbG9yOiMxYjYyNGY7DQoJCX0NCgkJLmZvb2QtY2FyZC1ib2R5IHN0cm9uZywuaXRlbS1zdXBlcnRpdGxlLmZvb2QsLml0ZW0tc3VwZXJ0aXRsZS5mb29kIGEsLml0ZW0tYm9keS1saW5rLmZvb2R7DQoJCQljb2xvcjojZjNjYjAwOw0KCQl9DQoJCS50aGVtZXdlZWstaW1nLXdyYXB7DQoJCQlwYWRkaW5nOjMycHggMzJweCAwOw0KCQl9DQoJCS50aGVtZXdlZWstaW1new0KCQkJbWF4LXdpZHRoOjYwJTsNCgkJCW1heC1oZWlnaHQ6NTBweDsNCgkJfQ0KCQkuaXRlbS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjA7DQoJCX0NCgkJLmxpbmtlZC1jYXJkOmhvdmVyIHN0cm9uZ3sNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCX0NCgkJLmxpbmtlZC1jYXJkOmhvdmVyew0KCQkJY3Vyc29yOnBvaW50ZXIgIWltcG9ydGFudDsNCgkJfQ0KCQkuc3BvbnNvci10aXRsZSwuc3BvbnNvci10aXRsZSBhew0KCQkJZm9udC1zaXplOjE1cHg7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdDZW50dXJ5IEdvdGhpYycsJ0NlbnR1cnlHb3RoaWMnLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90byc7DQoJCQlmb250LXdlaWdodDo2MDA7DQoJCQlsaW5lLWhlaWdodDoxZW07DQoJCQlsZXR0ZXItc3BhY2luZzouMTJlbTsNCgkJCXRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsNCgkJCWNvbG9yOiNjY2I0OGQ7DQoJCX0NCgkJLnNwb25zb3ItdGl0bGUgYTpob3Zlciwuc3BvbnNvci10aXRsZSBhOmZvY3Vzew0KCQkJY29sb3I6I2NjYjQ4ZDsNCgkJfQ0KCQkud2l0aC10b3AtaHJ7DQoJCQlwYWRkaW5nOjEycHg7DQoJCQlib3JkZXItdG9wOjFweCBzb2xpZCAjY2NjOw0KCQl9DQoJCS5mb3J1bS1jYXJkLWJnew0KCQkJYmFja2dyb3VuZC1jb2xvcjojRUZFOERDOw0KCQkJcGFkZGluZzo5OHB4IDMwcHggMjRweDsNCgkJfQ0KCQkuZm9ydW0tY2FyZC1pY29uLXdyYXB7DQoJCQltYXgtaGVpZ2h0OjQwcHg7DQoJCQlwYWRkaW5nLWxlZnQ6MzBweDsNCgkJfQ0KCQkuZm9ydW0tcXVvdGUsLmZvcnVtLXF1b3RlIGF7DQoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsNCgkJCWNvbG9yOiMzODJDMTQ7DQoJCQlmb250LWZhbWlseToiSGVsdmV0aWNhIE5ldWUiLCJIZWx2ZXRpY2EiLCdDZW50dXJ5IEdvdGhpYycsJ0NlbnR1cnlHb3RoaWMnLCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90byc7DQoJCQlmb250LXNpemU6MjRweDsNCgkJCWZvbnQtd2VpZ2h0OjcwMDsNCgkJCWxpbmUtaGVpZ2h0OjMwcHg7DQoJCQltYXJnaW4tYm90dG9tOjE0cHg7DQoJCX0NCgkJLmZvcnVtLWF0dHJpYnV0aW9uLC5mb3J1bS1hdHRyaWJ1dGlvbiBhew0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQoJCQljb2xvcjojODU4NTg1Ow0KCQkJZm9udC1mYW1pbHk6IkhlbHZldGljYSBOZXVlIiwiSGVsdmV0aWNhIiwnQ2VudHVyeSBHb3RoaWMnLCdDZW50dXJ5R290aGljJywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nOw0KCQkJZm9udC1zaXplOjIwcHg7DQoJCQlmb250LXdlaWdodDo0MDA7DQoJCQlsZXR0ZXItc3BhY2luZzoxcHg7DQoJCQlsaW5lLWhlaWdodDoxNnB4Ow0KCQl9DQoJCS5mb3J1bS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjM4cHg7DQoJCX0NCgkJLmZvcnVtLWNvbnRlbnQtcGFkZGVkew0KCQkJcGFkZGluZy1sZWZ0OjEwcHg7DQoJCQlwYWRkaW5nLXJpZ2h0OjEwcHg7DQoJCX0NCgkJLnF1b3RlLWVtLWRhc2h7DQoJCQlwYWRkaW5nLXJpZ2h0OjRweDsNCgkJfQ0KCQkuc2ltcGxpZmllZC10ZW1wbGF0ZSAuY2FyZC1oZWFkZXJ7DQoJCQlwYWRkaW5nOjA7DQoJCX0NCgkJLnNpbXBsaWZpZWQtdGVtcGxhdGUgLnB7DQoJCQltYXJnaW4tdG9wOjIwcHg7DQoJCQlsaW5lLWhlaWdodDoyOHB4Ow0KCQkJbGV0dGVyLXNwYWNpbmc6LjE5cHg7DQoJCX0NCgkJLnNpbXBsaWZpZWQtdGVtcGxhdGUgLml0ZW0taW1hZ2V7DQoJCQltYXJnaW4tYm90dG9tOjI1cHg7DQoJCX0NCgkJLmxlZnQtYWxpZ25lZHsNCgkJCXRleHQtYWxpZ246bGVmdCAhaW1wb3J0YW50Ow0KCQl9DQoJCS5yaWdodC1hbGlnbmVkew0KCQkJdGV4dC1hbGlnbjpyaWdodCAhaW1wb3J0YW50Ow0KCQl9DQoJCS5zYW5zew0KCQkJZm9udC1mYW1pbHk6IkhlbHZldGljYSBOZXVlIiwiSGVsdmV0aWNhIiwnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7DQoJCX0NCgkJLnNlcmlmew0KCQkJZm9udC1mYW1pbHk6VGltZXNOZXdSb21hbixUaW1lcyBOZXcgUm9tYW4sVGltZXMsQmFza2VydmlsbGUsR2VvcmdpYSxzZXJpZiAhaW1wb3J0YW50Ow0KCQl9DQoJCS5zaW1wbGlmaWVkLXRlbXBsYXRlIC5zaW1wbGlmaWVkLWNvbG9yLC5zaW1wbGlmaWVkLXRlbXBsYXRlIC5zaW1wbGlmaWVkLWNvbG9yIGEsLnNpbXBsaWZpZWQtdGVtcGxhdGUgLnNpbXBsaWZpZWQtY29sb3IgYTpob3Zlciwuc2ltcGxpZmllZC10ZW1wbGF0ZSAuc2ltcGxpZmllZC1jb2xvciBhOmZvY3Vzew0KCQkJY29sb3I6I2JkODA0OTsNCgkJfQ0KCQkuc2ltcGxpZmllZC10ZW1wbGF0ZSAuaXRlbS1ib2R5LWxpbmt7DQoJCQltYXJnaW4tdG9wOjIwcHg7DQoJCX0NCgkJLmZvb3Rlci1vdXRsaW5rIGltZ3sNCgkJCWhlaWdodDo5NXB4Ow0KCQkJbWF4LWhlaWdodDo5NXB4Ow0KCQkJd2lkdGg6YXV0bzsNCgkJCWRpc3BsYXk6aW5saW5lLWJsb2NrOw0KCQkJbWFyZ2luOjAgMCAxMHB4Ow0KCQl9DQoJCSNuZXdzbGV0dGVycy1saW5rLmZvb3Rlci1vdXRsaW5rew0KCQkJdGV4dC1hbGlnbjpyaWdodDsNCgkJfQ0KCQkjbmV3c2xldHRlcnMtbGluay5mb290ZXItb3V0bGluayBpbWd7DQoJCQloZWlnaHQ6OTNweDsNCgkJfQ0KCQkuZm9vdGVyLW91dGxpbmt7DQoJCQl3aWR0aDo0NSU7DQoJCQltYXgtd2lkdGg6MTcycHg7DQoJCQlwYWRkaW5nLXJpZ2h0OjUwcHg7DQoJCX0NCgkJLm5vbmRlY29yYXRlZHsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7DQoJCX0NCgkJI25ld3NsZXR0ZXJzLWxpbmt7DQoJCQlwYWRkaW5nLXJpZ2h0OjA7DQoJCX0NCgkJLm91dGxpbmstcm93ew0KCQkJdGV4dC1hbGlnbjpsZWZ0Ow0KCQkJcGFkZGluZy10b3A6MTBweDsNCgkJfQ0KCQkudGFnbGluZS1zcHJpdGV7DQoJCQlkaXNwbGF5OmlubGluZS1ibG9jazsNCgkJCWhlaWdodDozNXB4Ow0KCQkJbWF4LWhlaWdodDozNXB4Ow0KCQl9DQoJCS50YWdsaW5lLXJvd3sNCgkJCXRleHQtYWxpZ246bGVmdDsNCgkJCW1hcmdpbi1ib3R0b206MjlweDsNCgkJCW1hcmdpbi10b3A6MTBweDsNCgkJfQ0KCQkudG9wLWJvcmRlci1pdGVtew0KCQkJYm9yZGVyLXRvcDoxcHggc29saWQgI2U3ZTdlNzsNCgkJCXBhZGRpbmctdG9wOjMycHg7DQoJCX0NCgkJLnNvY2lhbC1yb3d7DQoJCQltYXJnaW4tYm90dG9tOjEwcHg7DQoJCX0NCgkJLmZvb3Rlci1hZGRyZXNzew0KCQkJY29sb3I6IzY2NjY2NjsNCgkJCWZvbnQtc2l6ZToxMXB4Ow0KCQkJbGV0dGVyLXNwYWNpbmc6LjI3cHg7DQoJCQlsaW5lLWhlaWdodDoxOXB4Ow0KCQl9DQoJCS5mb290ZXItYWRkcmVzcyBhew0KCQkJdGV4dC1kZWNvcmF0aW9uOm5vbmUgIWltcG9ydGFudDsNCgkJfQ0KCQkjZm9vdGVyLWlubGluZS1saW5rc3sNCgkJCWNvbG9yOiNiZDgwNDk7DQoJCX0NCgkJI2Zvb3Rlci1pbmxpbmUtbGlua3MgYXsNCgkJCWNvbG9yOiNiZDgwNDk7DQoJCQlmb250LXNpemU6MTFweDsNCgkJCWxldHRlci1zcGFjaW5nOi43OHB4Ow0KCQkJbGluZS1oZWlnaHQ6MTVweDsNCgkJCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7DQoJCQlmb250LXdlaWdodDpub3JtYWw7DQoJCQl0ZXh0LWFsaWduOmNlbnRlcjsNCgkJfQ0KCQkjZm9vdGVyLWlubGluZS1saW5rc3sNCgkJCW1hcmdpbjoxM3B4IDAgMTBweDsNCgkJfQ0KCQkuaW5saW5lLXBpcGV7DQoJCQl2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZTsNCgkJCWZvbnQtc2l6ZToxMXB4Ow0KCQkJbWFyZ2luOjAgMXB4Ow0KCQl9DQoJCSNmb290ZXItaW5saW5lLWxpbmtzLnRvcC1ib3JkZXItaXRlbXsNCgkJCXBhZGRpbmctdG9wOjE0cHg7DQoJCX0NCgkJI2Zvb3Rlci1pbmxpbmUtbGlua3MgYSwjZm9vdGVyLWlubGluZS1saW5rcyBhOmhvdmVyLCNmb290ZXItaW5saW5lLWxpbmtzIGE6Zm9jdXN7DQoJCQljb2xvcjojYmQ4MDQ5ICFpbXBvcnRhbnQ7DQoJCX0NCgkJLnNvY2lhbC1yb3cgYXsNCgkJCWRpc3BsYXk6aW5saW5lLWJsb2NrOw0KCQkJbWFyZ2luLXJpZ2h0OjIwcHg7DQoJCX0NCgkJLnNvY2lhbC1zcHJpdGV7DQoJCQloZWlnaHQ6MjBweDsNCgkJCXdpZHRoOmF1dG87DQoJCX0NCgkJLnNwb25zb3JlZC1zdWJoZWFkew0KCQkJbGV0dGVyLXNwYWNpbmc6LjI3cHg7DQoJCQl3aWR0aDoxMDAlOw0KCQl9DQoJCS5oZWFkZXItZGF0ZXsNCgkJCXdoaXRlLXNwYWNlOm5vd3JhcDsNCgkJCW1pbi13aWR0aDoxMzBweDsNCgkJCWxpbmUtaGVpZ2h0OjEzcHg7DQoJCQlwYWRkaW5nLXRvcDoxM3B4Ow0KCQl9DQoJCS5oZWFkZXItZGF0ZSwuc3BvbnNvcmVkLXN1YmhlYWR7DQoJCQlmb250LXNpemU6MTNweDsNCgkJCWNvbG9yOiMzMzM7DQoJCX0NCgkJLnNwb25zb3JlZC1zdWJoZWFkew0KCQkJbWFyZ2luLWJvdHRvbToyMHB4Ow0KCQkJd2hpdGUtc3BhY2U6bm93cmFwOw0KCQl9DQoJCS5zcG9uc29yZWQtc3ViaGVhZCAuc2Fuc3sNCgkJCW1hcmdpbjoxM3B4IDEwcHggMTNweCAwOw0KCQkJZGlzcGxheTppbmxpbmUtYmxvY2s7DQoJCQlsaW5lLWhlaWdodDoyNnB4Ow0KCQkJdmVydGljYWwtYWxpZ246bWlkZGxlOw0KCQkJY29sb3I6IzM4MmMxNDsNCgkJfQ0KCQkuc3BvbnNvcmVkLXN1YmhlYWQgYXsNCgkJCXRleHQtZGVjb3JhdGlvbjpub25lOw0KCQkJY29sb3I6IzM4MmMxNCAhaW1wb3J0YW50Ow0KCQl9DQoJCSNzcG9uc29yZWQtaW1new0KCQkJbWluLWhlaWdodDoyMHB4Ow0KCQkJd2lkdGg6YXV0bzsNCgkJCW1heC1oZWlnaHQ6MjZweDsNCgkJCWRpc3BsYXk6aW5saW5lLWJsb2NrOw0KCQkJdmVydGljYWwtYWxpZ246bWlkZGxlOw0KCQl9DQoJCS5sZWZ0LXBhZGRlZHsNCgkJCXBhZGRpbmctbGVmdDozMHB4Ow0KCQl9DQoJCS5yaWdodC1wYWRkZWR7DQoJCQlwYWRkaW5nLXJpZ2h0OjMwcHg7DQoJCX0NCgkJLmNvbnRlbnQtd2lkdGh7DQoJCQl3aWR0aDoxMDAlOw0KCQkJbWluLXdpZHRoOjQxNXB4Ow0KCQl9DQoJCS5zbS1zcGFjZXJ7DQoJCQloZWlnaHQ6N3B4Ow0KCQl9DQoJCS5sZWRlLWNhcmQtYm9keXsNCgkJCXBhZGRpbmc6MCA1cHggNXB4Ow0KCQl9DQo8L3N0eWxlPjwhLS1baWYgIW1zb10-PCEtLT48bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvOjQwMCw0MDBpLDcwMCw3MDBpIiByZWw9InN0eWxlc2hlZXQiPjwhLS08IVtlbmRpZl0tLT48L2hlYWQ-DQogIDxib2R5IGxlZnRtYXJnaW49IjAiIG1hcmdpbndpZHRoPSIwIiB0b3BtYXJnaW49IjAiIG1hcmdpbmhlaWdodD0iMCIgb2Zmc2V0PSIwIiBzdHlsZT0iYmFja2dyb3VuZDogI2Y1ZjRmMzstd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7bWFyZ2luOiAwO3BhZGRpbmc6IDA7d2lkdGg6IDEwMCUgIWltcG9ydGFudDsiPg0KICAgIDxjZW50ZXI-DQogICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjUiIHdpZHRoPSI0ODUiIGlkPSJiYWNrZ3JvdW5kVGFibGUiIGNsYXNzPSJzaW1wbGlmaWVkLXRlbXBsYXRlIiBzdHlsZT0iaGVpZ2h0OiAxMDAlO21hcmdpbjogMDtwYWRkaW5nOiAwO3dpZHRoOiAxMDAlICFpbXBvcnRhbnQ7Ij4NCiAgICAgICAgPHRib2R5Pg0KICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249InRvcCI-DQogICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjQ3NSIgaWQ9InRlbXBsYXRlUHJlaGVhZGVyIj4NCiAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCIgY2xhc3M9InByZWhlYWRlckNvbnRlbnQiPg0KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImNvbG9yOiAjODA4MDgwO2ZvbnQtc2l6ZTogMTFweDttYXJnaW4tYm90dG9tOiAzMHB4O3RleHQtYWxpZ246IGNlbnRlcjtwYWRkaW5nOiAxM3B4IDAgN3B4O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmx1cmIiIHN0eWxlPSJjb2xvcjogI2Y1ZjRmMztmb250LXNpemU6IDExcHg7Ij5BZHZlbnR1cmVzIGluIGRpZ2l0YWwgYXJjaGl2ZXMsIHRoZSBsb25lbGllc3QgbGlnaHRob3VzZSwgYW5kIG1vcmUuPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGJyPg0KICAgICAgICAgICAgICAgICAgICAgICAgRW1haWwgbm90IGRpc3BsYXlpbmcgY29ycmVjdGx5PyA8YSBocmVmPSJodHRwczovL21haWxjaGkubXAvYXRsYXNvYnNjdXJhLmNvbS9wcmVzaWRlbnRpYWwtcGllLWRhaWx5LTI2MTEzOD9lPTg4OTliNzdiZTIiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Y29sb3I6ICMzMzY2OTk7Zm9udC13ZWlnaHQ6IG5vcm1hbDsiPlZpZXcgaW4geW91ciBicm93c2VyPC9hPi4NCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iNDc1IiBpZD0idGVtcGxhdGVDb250YWluZXIiIHN0eWxlPSJib3JkZXI6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICA8IS0tIGNhbXBhaWduIGNvbnRlbnQgc3RhcnQgLS0-DQogICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjQ3NSIgYWxpZ249ImNlbnRlciI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9Im1hc3RoZWFkLWxpbmsiIGNsYXNzPSJub25kZWNvcmF0ZWQiIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTExNDI1OGM1ZDgmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Im1jbkltYWdlIGhlYWRlci1sb2dvIiBzcmM9Imh0dHBzOi8vZ2FsbGVyeS5tYWlsY2hpbXAuY29tLzM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUvaW1hZ2VzLzczZWQ5NGVlLWY4ODEtNGVhMS04ZTFmLTQ0Zjk4NDgzMDIxYy5wbmciIHdpZHRoPSIyMDMiIGFsdD0iNzNlZDk0ZWUtZjg4MS00ZWExLThlMWYtNDRmOTg0ODMwMjFjLnBuZyIgc3R5bGU9ImJvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiBhdXRvO2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOyI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci1kYXRlIHNhbnMgcmlnaHQtYWxpZ25lZCIgc3R5bGU9IndoaXRlLXNwYWNlOiBub3dyYXA7bWluLXdpZHRoOiAxMzBweDtsaW5lLWhlaWdodDogMTNweDtwYWRkaW5nLXRvcDogMTNweDtmb250LXNpemU6IDEzcHg7Y29sb3I6ICMzMzM7dGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPkZlYnJ1YXJ5IDE4LCAyMDIxPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0iYm90dG9tIiB3aWR0aD0iMTAwJSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImhlaWdodDoxMnB4OyI-PC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgd2lkdGg9IjEwMCUiPg0KDQogICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249InRvcCI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSI0NzUiIGlkPSJ0ZW1wbGF0ZUJvZHkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0iYm9keUNvbnRlbnQiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gU3RhcnQgSGVybyBhbmQgSW50cm8gLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0ibGlua2VkLWNhcmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTExMjhhOTU2MTUmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTsiPjxpbWcgc3JjPSJodHRwczovL21jdXNlcmNvbnRlbnQuY29tLzM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUvaW1hZ2VzLzkwYTMzZWJhLTVkZTYtNDQxMS1iOWFhLTM3YmU4YzcyNDFlZC5qcGciIGFsdD0iIiBib3JkZXI9IjAiIHN0eWxlPSJtYXJnaW46IDA7cGFkZGluZzogMDttYXgtd2lkdGg6IDQ3NXB4O21heC1oZWlnaHQ6IDI2OHB4O2JvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiBhdXRvO2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOyIgd2lkdGg9IjQ3NSI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMjUiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5IGxlZGUtY2FyZC1ib2R5IiBzdHlsZT0icGFkZGluZzogMCA1cHggNXB4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY-PGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgbGVmdC1hbGlnbmVkIiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O3BhZGRpbmc6IDA7bWFyZ2luLWJvdHRvbTogLTRweDsiPg0KPGRpdiBjbGFzcz0iaXRlbS1zdXBlcnRpdGxlIHNpbXBsaWZpZWQtY29sb3IiIHN0eWxlPSJmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O21hcmdpbi1ib3R0b206IDZweDtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTNhZWRjYzQ5MGYmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-PC9hPjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJoMyIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrO2ZvbnQtd2VpZ2h0OiBib2xkO2ZvbnQtc2l6ZTogMzJweDtsaW5lLWhlaWdodDogMWVtO2NvbG9yOiAjMzgyYzE0ICFpbXBvcnRhbnQ7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD04NDBjNzg4ZDg5JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzM4MmMxNDsiPlRoZSBHcmVhdCBLZW55YW4gR2lyYWZmZSBSZXNjdWUNCjwvYT48L2Rpdj4NCjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJwIHNlcmlmIiBzdHlsZT0iY29sb3I6ICMzMzM7ZGlzcGxheTogYmxvY2s7Zm9udC1mYW1pbHk6IFRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6IDE5cHg7bGluZS1oZWlnaHQ6IDI4cHg7bWFyZ2luLXRvcDogMjBweDtwYWRkaW5nLWxlZnQ6IDJweDtwYWRkaW5nLXJpZ2h0OiAycHg7dGV4dC1hbGlnbjogbGVmdDtsZXR0ZXItc3BhY2luZzogLjE5cHg7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD0zMzI4NTQ5ZTZhJmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzMzMzsiPk9uIGEgc3VubnkgZGF5IGF0IEtlbnlh4oCZcyBMYWtlIEJhcmluZ28sIGEgYmFyZ2UgZmxvYXRlZCBnZW50bHkgYnkuIEl0cyBtYWluIHBhc3NlbmdlciBjYWxtbHkgbXVuY2hlZCBvbiBoaXMgZmF2b3JpdGUgc25hY2sgb2YgYWNhY2lhIHNlZWQgcG9kcy4gQXQgYWJvdXQgMTYgZmVldCB0YWxsLCBoZSBjb3VsZCBlYXNpbHkgcGVlciBhcm91bmQgdG8gdGFrZSBpbiBoaXMgd2F0ZXJ5IHN1cnJvdW5kaW5ncy4gQnV0IHRoaXMgd2FzIG5vdCBzb21lIGlkeWxsaWMgcGxlYXN1cmUgY3J1aXNlLiBUaGlzIHRyaXAsIG9uIEphbnVhcnkgMjcsIDIwMjEsIHdhcyBhIHJlc2N1ZSBtaXNzaW9uLCB0byBzYXZlIExiYXJub3RpLCBhIFJvdGhzY2hpbGTigJlzIGdpcmFmZmUsIGZyb20gZmxvb2R3YXRlcnMgZ3JhZHVhbGx5IHJpc2luZyBhcm91bmQgTG9uZ2ljaGFybyBJc2xhbmQsIHdoZXJlIGhlIGFuZCBzb21lIGZlbGxvdyBydW1pbmFudHMgaGFkIGxpdmVkIGZvciBhIGRlY2FkZS4NCjwvYT48L2Rpdj4NCg0KPGRpdiBjbGFzcz0iaXRlbS1ib2R5LWxpbmsgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLXRvcDogMjBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD0xNDkyNjA2MjA4JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-UmVhZCBtb3JlIDwvYT48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1kOTNjNjI4ZGVlJmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-PHNwYW4gY2xhc3M9Imd1aWxsZW1ldCIgc3R5bGU9InZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDsiPiZyYXJyOzwvc3Bhbj48L2E-PC9kaXY-DQo8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJscmctc3BhY2VyIiBzdHlsZT0iYmFja2dyb3VuZDogI2Y1ZjRmMztoZWlnaHQ6IDI0cHg7d2lkdGg6IDEwMCU7Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gRW5kIEhlcm8gYW5kIEludHJvIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBTdGFydCBTaW1wbGlmaWVkIFJlcGVhdGFibGUgTW9kdWxlICAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgbWM6cmVwZWF0YWJsZT0icmVwZWF0XzEiIG1jOnZhcmlhbnQ9IlZhcmlhYmxlIENvbnRlbnQiIG1jOnJlcGVhdGluZGV4PSIwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RkLXNwYWNlciIgc3R5bGU9ImJhY2tncm91bmQ6ICNmNWY0ZjM7aGVpZ2h0OiAxcHg7d2lkdGg6IDEwMCU7Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0ibGlua2VkLWNhcmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPWQwZWZiYWQ1YTEmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTsiPjxpbWcgc3JjPSJodHRwczovL21jdXNlcmNvbnRlbnQuY29tLzM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUvaW1hZ2VzL2M4Yzc3YzM1LTIxYjAtNGNhMS05ZTRkLWRjYzdjNmM2NjE5Mi5qcGciIGFsdD0iIiBib3JkZXI9IjAiIHN0eWxlPSJtYXJnaW46IDA7cGFkZGluZzogMDttYXgtd2lkdGg6IDQxMXB4O21heC1oZWlnaHQ6IDIzMnB4O2JvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiBhdXRvO2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO21hcmdpbi1ib3R0b206IDI1cHg7IiB3aWR0aD0iNDExIiBjbGFzcz0iaXRlbS1pbWFnZSI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBsZWZ0LWFsaWduZWQiIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7cGFkZGluZzogMDttYXJnaW4tYm90dG9tOiAtNHB4OyI-DQo8ZGl2IGNsYXNzPSJoMyIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrO2ZvbnQtd2VpZ2h0OiBib2xkO2ZvbnQtc2l6ZTogMzJweDtsaW5lLWhlaWdodDogMWVtO2NvbG9yOiAjMzgyYzE0ICFpbXBvcnRhbnQ7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1mNTE5ZDQwNTkxJmU9ODg5OWI3N2JlMiIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmU7Y29sb3I6ICMzODJjMTQ7Ij5Gb3VuZDogQW4gRW1wZXJvciZyc3F1bztzIEJlZGNoYW1iZXIgPC9hPjwvZGl2Pg0KPC9kaXY-DQoNCjxkaXYgY2xhc3M9InAgc2VyaWYiIHN0eWxlPSJjb2xvcjogIzMzMztkaXNwbGF5OiBibG9jaztmb250LWZhbWlseTogVGltZXNOZXdSb21hbixUaW1lcyBOZXcgUm9tYW4sVGltZXMsQmFza2VydmlsbGUsR2VvcmdpYSxzZXJpZiAhaW1wb3J0YW50O2ZvbnQtc2l6ZTogMTlweDtsaW5lLWhlaWdodDogMjhweDttYXJnaW4tdG9wOiAyMHB4O3BhZGRpbmctbGVmdDogMnB4O3BhZGRpbmctcmlnaHQ6IDJweDt0ZXh0LWFsaWduOiBsZWZ0O2xldHRlci1zcGFjaW5nOiAuMTlweDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTc5OTI2ZDQyZWEmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2NvbG9yOiAjMzMzOyI-QWZ0ZXIgdHdvIGRlY2FkZXMgc3BlbnQgbGVhZGluZyBhcmNoYWVvbG9naWNhbCBkaWdzIGFtb25nIHRoZSAxLDkwMC15ZWFyLW9sZCBydWlucyBvZiB0aGUgZm9ybWVyIFJvbWFuIGVtcGVyb3IgSGFkcmlhbiZyc3F1bztzIHNwcmF3bGluZyBWaWxsYSBBZHJpYW5hLCBSYWZhZWwgSGlkYWxnbyBQcmlldG8gdGhvdWdodCBoZSZyc3F1bztkIHNlZW4gaXQgYWxsLiBUaGVuIHRoZSBTcGFuaXNoIHByb2Zlc3NvciBhbmQgaGlzIHRlYW0gZGlzY292ZXJlZCBhbiBpbXBlcmlhbCBicmVha2Zhc3Qgcm9vbSB1bmxpa2UgYW55dGhpbmcgaW4gdGhlIHdvcmxkOiBhIHBhbGF6em8gYXJlYSB0aGF0IG9uY2UgZmVhdHVyZWQgYSByb3lhbCBmb3VyLWJlZHJvb20gY29tcGxleCB3aXRoIGEgcHJpdmF0ZSBkaW5pbmcgYXJlYSBzdXNwZW5kZWQgb3ZlciBhIHBvb2wgb2YgZmxvd2luZyB3YXRlci4gPC9hPjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJpdGVtLWJvZHktbGluayBzaW1wbGlmaWVkLWNvbG9yIiBzdHlsZT0iZm9udC1zaXplOiAxNXB4O2ZvbnQtd2VpZ2h0OiA2MDA7bGluZS1oZWlnaHQ6IDFlbTtsZXR0ZXItc3BhY2luZzogLjEyZW07dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtjb2xvcjogI2JkODA0OTttYXJnaW4tdG9wOiAyMHB4O2Rpc3BsYXk6IGlubGluZS1ibG9jaztmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTMzZDhkYWQxOTEmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2ZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij5SZWFkIG1vcmUgPHNwYW4gY2xhc3M9Imd1aWxsZW1ldCIgc3R5bGU9InZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDsiPiZyYXJyOzwvc3Bhbj48L2E-PC9kaXY-DQo8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgbWM6cmVwZWF0YWJsZT0icmVwZWF0XzEiIG1jOnZhcmlhbnQ9IlZhcmlhYmxlIENvbnRlbnQiIG1jOnJlcGVhdGluZGV4PSIxIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RkLXNwYWNlciIgc3R5bGU9ImJhY2tncm91bmQ6ICNmNWY0ZjM7aGVpZ2h0OiAxcHg7d2lkdGg6IDEwMCU7Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0ibGlua2VkLWNhcmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTA4NjRlZWQxNGQmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTsiPjxpbWcgc3JjPSJodHRwczovL21jdXNlcmNvbnRlbnQuY29tLzM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUvaW1hZ2VzLzdkMmY5YjE1LTQwOTgtNDUxYy05YzI4LTU5MDY1MDExMTg3NS5qcGciIGFsdD0iIiBib3JkZXI9IjAiIHN0eWxlPSJtYXJnaW46IDA7cGFkZGluZzogMDttYXgtd2lkdGg6IDQxMXB4O21heC1oZWlnaHQ6IDIzMnB4O2JvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiBhdXRvO2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO21hcmdpbi1ib3R0b206IDI1cHg7IiB3aWR0aD0iNDExIiBjbGFzcz0iaXRlbS1pbWFnZSI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBsZWZ0LWFsaWduZWQiIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7cGFkZGluZzogMDttYXJnaW4tYm90dG9tOiAtNHB4OyI-DQo8ZGl2IGNsYXNzPSJpdGVtLXN1cGVydGl0bGUgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLWJvdHRvbTogNnB4O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-PGEgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9NDU5NmQ4N2Q4NiZlPTg4OTliNzdiZTIiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2ZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij5TYW4gSm9zJmVhY3V0ZTssIENhbGlmb3JuaWEgPC9hPjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJoMyIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrO2ZvbnQtd2VpZ2h0OiBib2xkO2ZvbnQtc2l6ZTogMzJweDtsaW5lLWhlaWdodDogMWVtO2NvbG9yOiAjMzgyYzE0ICFpbXBvcnRhbnQ7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD0wZjVmNTYwN2RhJmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzM4MmMxNDsiPlRoZSBTYW4gSm9zJmVhY3V0ZTsgU2VtYXBob3JlIDwvYT48L2Rpdj4NCjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJwIHNlcmlmIiBzdHlsZT0iY29sb3I6ICMzMzM7ZGlzcGxheTogYmxvY2s7Zm9udC1mYW1pbHk6IFRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6IDE5cHg7bGluZS1oZWlnaHQ6IDI4cHg7bWFyZ2luLXRvcDogMjBweDtwYWRkaW5nLWxlZnQ6IDJweDtwYWRkaW5nLXJpZ2h0OiAycHg7dGV4dC1hbGlnbjogbGVmdDtsZXR0ZXItc3BhY2luZzogLjE5cHg7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD02YjMzZWYyMjI0JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzMzMzsiPkVtYmVkZGVkIGludG8gdGhlIGZhJmNjZWRpbDthZGUgb2YgYSB0YWxsIG9mZmljZSBidWlsZGluZyBpbiBkb3dudG93biBTYW4gSm9zJmVhY3V0ZTssIGZvdXIgZGlnaXRhbCB5ZWxsb3cgY2lyY2xlcyByb3RhdGUgZXZlcnkgZmV3IHNlY29uZHMsIHNlZW1pbmdseSB3aXRob3V0IHB1cnBvc2UuIFRoaXMgZGlzcGxheSBoYXMgZ29uZSBvbiBzaW5jZSAyMDA2LCBhbmQgaXQgY291bGQgYmUgZWFzaWx5IGRpc21pc3NlZCBhcyBhbiB1bnVzdWFsIGFydGlzdGljIGNob2ljZSBieSB0aGUgcmVzaWRlbnQgb2YgdGhlIGJ1aWxkaW5nLCB0aGUgc29mdHdhcmUgY29tcGFueSBBZG9iZS4gQnV0IGluIGFjdHVhbGl0eSwgdGhpcyBsaWdodCBpbnN0YWxsYXRpb24sIHRoZSBTYW4gSm9zJmVhY3V0ZTsgU2VtYXBob3JlLCBpcyBiZWFtaW5nIGEgY29kZSBhY3Jvc3MgdGhlIGNpdHkuIDwvYT48L2Rpdj4NCg0KPGRpdiBjbGFzcz0iaXRlbS1ib2R5LWxpbmsgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLXRvcDogMjBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD05OTVjNzZhOWU1JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-UmVhZCBNb3JlIDxzcGFuIGNsYXNzPSJndWlsbGVtZXQiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7Ij4mcmFycjs8L3NwYW4-PC9hPjwvZGl2Pg0KPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IG1jOnJlcGVhdGFibGU9InJlcGVhdF8xIiBtYzp2YXJpYW50PSJWYXJpYWJsZSBDb250ZW50IiBtYzpyZXBlYXRpbmRleD0iMiI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0ZC1zcGFjZXIiIHN0eWxlPSJiYWNrZ3JvdW5kOiAjZjVmNGYzO2hlaWdodDogMXB4O3dpZHRoOiAxMDAlOyI-PC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIzMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCIgY2xhc3M9ImxpbmtlZC1jYXJkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1jNDgxN2FmMTczJmU9ODg5OWI3N2JlMiIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmU7Ij48aW1nIHNyYz0iaHR0cHM6Ly9tY3VzZXJjb250ZW50LmNvbS8zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlL2ltYWdlcy85NjZhZDFiNi04NjQ2LTRmZjEtOGJmOC0yMzA4ZDg5YWY2YmQuanBnIiBhbHQ9IiIgYm9yZGVyPSIwIiBzdHlsZT0ibWFyZ2luOiAwO3BhZGRpbmc6IDA7bWF4LXdpZHRoOiA0MTFweDttYXgtaGVpZ2h0OiAyMzJweDtib3JkZXI6IG5vbmU7Zm9udC1zaXplOiAxNHB4O2ZvbnQtd2VpZ2h0OiBib2xkO2hlaWdodDogYXV0bztsaW5lLWhlaWdodDogMTAwJTtvdXRsaW5lOiBub25lO3RleHQtZGVjb3JhdGlvbjogbm9uZTt0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTttYXJnaW4tYm90dG9tOiAyNXB4OyIgd2lkdGg9IjQxMSIgY2xhc3M9Iml0ZW0taW1hZ2UiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY-PGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgbGVmdC1hbGlnbmVkIiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O3BhZGRpbmc6IDA7bWFyZ2luLWJvdHRvbTogLTRweDsiPg0KPGRpdiBjbGFzcz0iaXRlbS1zdXBlcnRpdGxlIHNpbXBsaWZpZWQtY29sb3IiIHN0eWxlPSJmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O21hcmdpbi1ib3R0b206IDZweDtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTc4YWMzMmQ0YjAmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-QXRsYXMgT2JzY3VyYSBFeHBlcmllbmNlcyA8L2E-PC9kaXY-DQoNCjxkaXYgY2xhc3M9ImgzIiBzdHlsZT0iZGlzcGxheTogYmxvY2s7Zm9udC13ZWlnaHQ6IGJvbGQ7Zm9udC1zaXplOiAzMnB4O2xpbmUtaGVpZ2h0OiAxZW07Y29sb3I6ICMzODJjMTQgIWltcG9ydGFudDtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPWQ5OTcyNjkwOGYmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2NvbG9yOiAjMzgyYzE0OyI-QWR2ZW50dXJlcyBJbiBEaWdpdGFsIEFyY2hpdmVzIDwvYT48L2Rpdj4NCjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJwIHNlcmlmIiBzdHlsZT0iY29sb3I6ICMzMzM7ZGlzcGxheTogYmxvY2s7Zm9udC1mYW1pbHk6IFRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6IDE5cHg7bGluZS1oZWlnaHQ6IDI4cHg7bWFyZ2luLXRvcDogMjBweDtwYWRkaW5nLWxlZnQ6IDJweDtwYWRkaW5nLXJpZ2h0OiAycHg7dGV4dC1hbGlnbjogbGVmdDtsZXR0ZXItc3BhY2luZzogLjE5cHg7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1kMGNkYzM0YWJjJmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzMzMzsiPkZhbW91cyBwYWludGluZ3MuIE9sZCBzY2llbmNlLWZpY3Rpb24gbWFnYXppbmVzLiBJbmZvcm1hdGlvbiBvbiByYXJlIGFydGlmYWN0cy4gRXZlcnkgZGF5IG1vcmUgYW5kIG1vcmUgb2JqZWN0cyBvZiBpbnRyaWd1ZSBhcmUgYmVpbmcgdXBsb2FkZWQgdG8gY29sbGVjdGlvbnMgYW5kIGFyY2hpdmVzIGFsbCBhY3Jvc3MgdGhlIGludGVybmV0LCBidXQgZG9uJnJzcXVvO3QgYmUgZGF1bnRlZCZtZGFzaDt3ZSZyc3F1bztyZSBoZXJlIHRvIGhlbHAgeW91IHVuZWFydGggaW5jcmVkaWJsZSBpdGVtcyBhbmQgZXhwbG9yZSB0aGVpciBoaXN0b3J5IGFuZCBpbXBvcnRhbmNlLiBKb2luIHVzIG9uIE1vbmRheSBmb3IgdGhlIG9ubHkgc2hvdyB0aGF0IGNlbGVicmF0ZXMgYWxsIHRoZSB3b25kZXJzIHRoYXQmcnNxdW87cmUgYmVzdCBleHBsb3JlZCBmcm9tIGhvbWUhIDwvYT48L2Rpdj4NCg0KPGRpdiBjbGFzcz0iaXRlbS1ib2R5LWxpbmsgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLXRvcDogMjBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1kNDU0MWMzNzg2JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-R2V0IFRpY2tldHMgPHNwYW4gY2xhc3M9Imd1aWxsZW1ldCIgc3R5bGU9InZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDsiPiZyYXJyOzwvc3Bhbj48L2E-PC9kaXY-DQo8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgbWM6cmVwZWF0YWJsZT0icmVwZWF0XzEiIG1jOnZhcmlhbnQ9IlZhcmlhYmxlIENvbnRlbnQiIG1jOnJlcGVhdGluZGV4PSIzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RkLXNwYWNlciIgc3R5bGU9ImJhY2tncm91bmQ6ICNmNWY0ZjM7aGVpZ2h0OiAxcHg7d2lkdGg6IDEwMCU7Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0ibGlua2VkLWNhcmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTgyYmI1NmExYjImZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTsiPjxpbWcgc3JjPSJodHRwczovL21jdXNlcmNvbnRlbnQuY29tLzM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUvaW1hZ2VzLzgwOWZiN2UyLThiODgtNDc0ZS05NzgyLWFkZWQ0Yzc4YTE5Ni5qcGciIGFsdD0iIiBib3JkZXI9IjAiIHN0eWxlPSJtYXJnaW46IDA7cGFkZGluZzogMDttYXgtd2lkdGg6IDQxMXB4O21heC1oZWlnaHQ6IDIzMnB4O2JvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiBhdXRvO2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO21hcmdpbi1ib3R0b206IDI1cHg7IiB3aWR0aD0iNDExIiBjbGFzcz0iaXRlbS1pbWFnZSI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBsZWZ0LWFsaWduZWQiIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7cGFkZGluZzogMDttYXJnaW4tYm90dG9tOiAtNHB4OyI-DQo8ZGl2IGNsYXNzPSJpdGVtLXN1cGVydGl0bGUgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLWJvdHRvbTogNnB4O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-PGEgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9YzkxN2UwZDM1YiZlPTg4OTliNzdiZTIiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2ZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij5Gcm9tIHRoZSBBcmNoaXZlcyA8L2E-PC9kaXY-DQoNCjxkaXYgY2xhc3M9ImgzIiBzdHlsZT0iZGlzcGxheTogYmxvY2s7Zm9udC13ZWlnaHQ6IGJvbGQ7Zm9udC1zaXplOiAzMnB4O2xpbmUtaGVpZ2h0OiAxZW07Y29sb3I6ICMzODJjMTQgIWltcG9ydGFudDtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTgwNjI3ZDJkYmUmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2NvbG9yOiAjMzgyYzE0OyI-VGhlIExpdmVzdG9jayBMaXZpbmcgYXQgdGhlIEVuZCBvZiB0aGUgV29ybGQgPC9hPjwvZGl2Pg0KPC9kaXY-DQoNCjxkaXYgY2xhc3M9InAgc2VyaWYiIHN0eWxlPSJjb2xvcjogIzMzMztkaXNwbGF5OiBibG9jaztmb250LWZhbWlseTogVGltZXNOZXdSb21hbixUaW1lcyBOZXcgUm9tYW4sVGltZXMsQmFza2VydmlsbGUsR2VvcmdpYSxzZXJpZiAhaW1wb3J0YW50O2ZvbnQtc2l6ZTogMTlweDtsaW5lLWhlaWdodDogMjhweDttYXJnaW4tdG9wOiAyMHB4O3BhZGRpbmctbGVmdDogMnB4O3BhZGRpbmctcmlnaHQ6IDJweDt0ZXh0LWFsaWduOiBsZWZ0O2xldHRlci1zcGFjaW5nOiAuMTlweDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPWUxY2YxZTliMmYmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2NvbG9yOiAjMzMzOyI-Q2VudHVyaWVzIGFnbywgdGhlc2UgcGlncyB3ZXJlIHBsb3BwZWQgb24gQXVja2xhbmQgSXNsYW5kIGFuZCBoYXZlIGJlZW4gdGhlcmUgZXZlciBzaW5jZS4gU2NyYXBweSwgYWdpbGUsIGFuZCBnb29kLW5hdHVyZWQsIHRoZXkmcnNxdW87cmUgaW5jcmVkaWJsZSBjcmVhdHVyZXMgdGhhdCB3ZXJlIG5ldmVyIHN1cHBvc2VkIHRvIGV4aXN0LiBCdXQgd2hpbGUgdGhleSZyc3F1bztyZSBub3cgY29uc2lkZXJlZCBtYW4tbWFkZSBwZXN0cyByaXBlIGZvciByZW1vdmFsLCB0aGVpciB1bmlxdWUgaXNsYW5kIGV2b2x1dGlvbiBoYXMgcmVuZGVyZWQgdGhlbSBleHRyZW1lbHkgdmFsdWFibGUgYW5kIHByaW9yaXRpZXMgZm9yIHByZXNlcnZhdGlvbi4gPC9hPjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJpdGVtLWJvZHktbGluayBzaW1wbGlmaWVkLWNvbG9yIiBzdHlsZT0iZm9udC1zaXplOiAxNXB4O2ZvbnQtd2VpZ2h0OiA2MDA7bGluZS1oZWlnaHQ6IDFlbTtsZXR0ZXItc3BhY2luZzogLjEyZW07dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtjb2xvcjogI2JkODA0OTttYXJnaW4tdG9wOiAyMHB4O2Rpc3BsYXk6IGlubGluZS1ibG9jaztmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPThiOTVlNzZiYzMmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2ZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij5SZWFkIG1vcmUgPHNwYW4gY2xhc3M9Imd1aWxsZW1ldCIgc3R5bGU9InZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDsiPiZyYXJyOzwvc3Bhbj48L2E-PC9kaXY-DQo8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgbWM6cmVwZWF0YWJsZT0icmVwZWF0XzEiIG1jOnZhcmlhbnQ9IlZhcmlhYmxlIENvbnRlbnQiIG1jOnJlcGVhdGluZGV4PSI0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RkLXNwYWNlciIgc3R5bGU9ImJhY2tncm91bmQ6ICNmNWY0ZjM7aGVpZ2h0OiAxcHg7d2lkdGg6IDEwMCU7Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0ibGlua2VkLWNhcmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTNmMGYxNjY0MzAmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTsiPjxpbWcgc3JjPSJodHRwczovL21jdXNlcmNvbnRlbnQuY29tLzM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUvaW1hZ2VzLzk1OTBhODRhLTcxNjctNDEyYy05Y2RlLWFlMWNhNzA2YTljMy5qcGciIGFsdD0iIiBib3JkZXI9IjAiIHN0eWxlPSJtYXJnaW46IDA7cGFkZGluZzogMDttYXgtd2lkdGg6IDQxMXB4O21heC1oZWlnaHQ6IDIzMnB4O2JvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiBhdXRvO2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO21hcmdpbi1ib3R0b206IDI1cHg7IiB3aWR0aD0iNDExIiBjbGFzcz0iaXRlbS1pbWFnZSI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBsZWZ0LWFsaWduZWQiIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7cGFkZGluZzogMDttYXJnaW4tYm90dG9tOiAtNHB4OyI-DQo8ZGl2IGNsYXNzPSJpdGVtLXN1cGVydGl0bGUgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLWJvdHRvbTogNnB4O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-PGEgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9ZDczYzAxMWY5YSZlPTg4OTliNzdiZTIiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2ZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij5Tb3V0aGVybiBJY2VsYW5kPC9hPjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJoMyIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrO2ZvbnQtd2VpZ2h0OiBib2xkO2ZvbnQtc2l6ZTogMzJweDtsaW5lLWhlaWdodDogMWVtO2NvbG9yOiAjMzgyYzE0ICFpbXBvcnRhbnQ7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1iMjk3MTA3NzA1JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzM4MmMxNDsiPiZUSE9STjtyJmlhY3V0ZTtkcmFuZ2F2aXRpIExpZ2h0aG91c2UgPC9hPjwvZGl2Pg0KPC9kaXY-DQoNCjxkaXYgY2xhc3M9InAgc2VyaWYiIHN0eWxlPSJjb2xvcjogIzMzMztkaXNwbGF5OiBibG9jaztmb250LWZhbWlseTogVGltZXNOZXdSb21hbixUaW1lcyBOZXcgUm9tYW4sVGltZXMsQmFza2VydmlsbGUsR2VvcmdpYSxzZXJpZiAhaW1wb3J0YW50O2ZvbnQtc2l6ZTogMTlweDtsaW5lLWhlaWdodDogMjhweDttYXJnaW4tdG9wOiAyMHB4O3BhZGRpbmctbGVmdDogMnB4O3BhZGRpbmctcmlnaHQ6IDJweDt0ZXh0LWFsaWduOiBsZWZ0O2xldHRlci1zcGFjaW5nOiAuMTlweDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPWYwNTZiZjI2MTEmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2NvbG9yOiAjMzMzOyI-RmV3IHBsYWNlcyBpbiB0aGUgd29ybGQgYXJlIGFzIGxvbmVseSBhcyAmVEhPUk47ciZpYWN1dGU7ZHJhbmdhdml0aSBMaWdodGhvdXNlLCBsb2NhdGVkIG9uIHRhbGwgY2xpZmZzIG9mZiB0aGUgY29hc3Qgb2YgdGhlIFdlc3RtYW4gSXNsYW5kcywgd2hpY2ggdGhlbXNlbHZlcyBhcmUgYWJvdXQgNC41IG1pbGVzIGZyb20gbWFpbmxhbmQgSWNlbGFuZC4gV2hlbiBidWlsZGluZyBjb21tZW5jZWQgaW4gMTkzOCwgYnVpbGRlcnMgaGFkIHRvIHNjYWxlIHRoZSBjbGlmZnMgdG8gcmVhY2ggdGhlIHBpbGxhciZyc3F1bztzIHBpbm5hY2xlLCBsYXlpbmcgb3V0IHRoZSBncm91bmR3b3JrIGJ5IGhhbmQuIDwvYT48L2Rpdj4NCg0KPGRpdiBjbGFzcz0iaXRlbS1ib2R5LWxpbmsgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLXRvcDogMjBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1lNGY5NDhhNzFlJmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-UmVhZCBtb3JlIDxzcGFuIGNsYXNzPSJndWlsbGVtZXQiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7Ij4mcmFycjs8L3NwYW4-PC9hPjwvZGl2Pg0KPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IG1jOnJlcGVhdGFibGU9InJlcGVhdF8xIiBtYzp2YXJpYW50PSJWYXJpYWJsZSBDb250ZW50IiBtYzpyZXBlYXRpbmRleD0iNSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0ZC1zcGFjZXIiIHN0eWxlPSJiYWNrZ3JvdW5kOiAjZjVmNGYzO2hlaWdodDogMXB4O3dpZHRoOiAxMDAlOyI-PC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIzMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCIgY2xhc3M9ImxpbmtlZC1jYXJkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD05NWYxYjg4N2E5JmU9ODg5OWI3N2JlMiIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmU7Ij48aW1nIHNyYz0iaHR0cHM6Ly9tY3VzZXJjb250ZW50LmNvbS8zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlL2ltYWdlcy9lNTMxZmM0Ni0wYjhmLTRlODUtODA3Zi1kM2NjZjAzZTg0OGQuanBnIiBhbHQ9IiIgYm9yZGVyPSIwIiBzdHlsZT0ibWFyZ2luOiAwO3BhZGRpbmc6IDA7bWF4LXdpZHRoOiA0MTFweDttYXgtaGVpZ2h0OiAyMzJweDtib3JkZXI6IG5vbmU7Zm9udC1zaXplOiAxNHB4O2ZvbnQtd2VpZ2h0OiBib2xkO2hlaWdodDogYXV0bztsaW5lLWhlaWdodDogMTAwJTtvdXRsaW5lOiBub25lO3RleHQtZGVjb3JhdGlvbjogbm9uZTt0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTttYXJnaW4tYm90dG9tOiAyNXB4OyIgd2lkdGg9IjQxMSIgY2xhc3M9Iml0ZW0taW1hZ2UiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY-PGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgbGVmdC1hbGlnbmVkIiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O3BhZGRpbmc6IDA7bWFyZ2luLWJvdHRvbTogLTRweDsiPg0KPGRpdiBjbGFzcz0iaXRlbS1zdXBlcnRpdGxlIHNpbXBsaWZpZWQtY29sb3IiIHN0eWxlPSJmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O21hcmdpbi1ib3R0b206IDZweDtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPThlZjU2ZDM0YjAmZT04ODk5Yjc3YmUyIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-RnJvbSB0aGUgQXJjaGl2ZXM8L2E-PC9kaXY-DQoNCjxkaXYgY2xhc3M9ImgzIiBzdHlsZT0iZGlzcGxheTogYmxvY2s7Zm9udC13ZWlnaHQ6IGJvbGQ7Zm9udC1zaXplOiAzMnB4O2xpbmUtaGVpZ2h0OiAxZW07Y29sb3I6ICMzODJjMTQgIWltcG9ydGFudDtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPjxhIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPWQyOWIzNDY2MTMmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lO2NvbG9yOiAjMzgyYzE0OyI-VGhlIFdvcmxkJnJzcXVvO3MgWW91bmdlc3QgRGVzZXJ0IDwvYT48L2Rpdj4NCjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJwIHNlcmlmIiBzdHlsZT0iY29sb3I6ICMzMzM7ZGlzcGxheTogYmxvY2s7Zm9udC1mYW1pbHk6IFRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6IDE5cHg7bGluZS1oZWlnaHQ6IDI4cHg7bWFyZ2luLXRvcDogMjBweDtwYWRkaW5nLWxlZnQ6IDJweDtwYWRkaW5nLXJpZ2h0OiAycHg7dGV4dC1hbGlnbjogbGVmdDtsZXR0ZXItc3BhY2luZzogLjE5cHg7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD00NmVmZjUyZmU2JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzMzMzsiPkFsb25nIHRoZSBib3JkZXIgYmV0d2VlbiBVemJla2lzdGFuIGFuZCBLYXpha2hzdGFuLCBhIGZsZWV0IG9mIHJ1c3RlZCBzaGlwcyBzaXRzIHRyYXBwZWQuIFRoaXMgd2FzIG9uY2UgdGhlIHdvcmxkJnJzcXVvO3MgZm91cnRoIGxhcmdlc3QgaW5sYW5kIGJvZHkgb2Ygd2F0ZXIsIGJ1dCB0b2RheSBpdCZyc3F1bztzIG1vcmUgZHJ5IHRoYW4gd2V0Jm1kYXNoO2EgYmFycmVuLCBzYWx0LXNjb3VyZWQgd2FzdGVsYW5kLiBXaGF0IHdhcyBvbmNlIGtub3duIGFzIHRoZSBBcmFsIFNlYSBpcyBub3cgdGhlIEFyYWxrdW0gRGVzZXJ0LCBvciBBcmFsIFNhbmRzLiBJdCZyc3F1bztzIGN1cnJlbnRseSB0aGUgd29ybGQmcnNxdW87cyB5b3VuZ2VzdCBkZXNlcnQsIGFuZCBhY3RzIGFzIGEga2V5IGVuZ2luZSBmb3IgQ2VudHJhbCBBc2lhbiBkdXN0IHN0b3Jtcy4gQnV0IHN0dWR5aW5nIHRoZSB0b3hpYyBkdXN0IGJsb3dpbmcgaGVyZSBpcyBleHRyYW9yZGluYXJpbHkgZGlmZmljdWx0OyBpdCBhbGwgY29tZXMgZG93biB0byBzb21ldGhpbmcgc2NpZW50aXN0cyBjYWxsICZsZHF1bztncm91bmQgdHJ1dGguJnJkcXVvOyA8L2E-PC9kaXY-DQoNCjxkaXYgY2xhc3M9Iml0ZW0tYm9keS1saW5rIHNpbXBsaWZpZWQtY29sb3IiIHN0eWxlPSJmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O21hcmdpbi10b3A6IDIwcHg7ZGlzcGxheTogaW5saW5lLWJsb2NrO2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-PGEgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9NDA3YTBlNWZjMCZlPTg4OTliNzdiZTIiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmU7Zm9udC1zaXplOiAxNXB4O2ZvbnQtd2VpZ2h0OiA2MDA7bGluZS1oZWlnaHQ6IDFlbTtsZXR0ZXItc3BhY2luZzogLjEyZW07dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtjb2xvcjogI2JkODA0OTtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPlJlYWQgbW9yZSA8c3BhbiBjbGFzcz0iZ3VpbGxlbWV0IiBzdHlsZT0idmVydGljYWwtYWxpZ246IHRleHQtdG9wOyI-JnJhcnI7PC9zcGFuPjwvYT48L2Rpdj4NCjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-PGRpdiBtYzpyZXBlYXRhYmxlPSJyZXBlYXRfMSIgbWM6dmFyaWFudD0iVmFyaWFibGUgQ29udGVudCIgbWM6cmVwZWF0aW5kZXg9IjYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGQtc3BhY2VyIiBzdHlsZT0iYmFja2dyb3VuZDogI2Y1ZjRmMztoZWlnaHQ6IDFweDt3aWR0aDogMTAwJTsiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMzAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIGNsYXNzPSJsaW5rZWQtY2FyZCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9YmYzZWI1YTFhZSZlPTg4OTliNzdiZTIiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lOyI-PGltZyBzcmM9Imh0dHBzOi8vbWN1c2VyY29udGVudC5jb20vMzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZS9pbWFnZXMvZDA1M2JjMDItZGIwMS00ZmRkLTg1ODgtODYyYmU4MzA1NGE5LmpwZyIgYWx0PSIiIGJvcmRlcj0iMCIgc3R5bGU9Im1hcmdpbjogMDtwYWRkaW5nOiAwO21heC13aWR0aDogNDExcHg7bWF4LWhlaWdodDogMjMycHg7Ym9yZGVyOiBub25lO2ZvbnQtc2l6ZTogMTRweDtmb250LXdlaWdodDogYm9sZDtoZWlnaHQ6IGF1dG87bGluZS1oZWlnaHQ6IDEwMCU7b3V0bGluZTogbm9uZTt0ZXh0LWRlY29yYXRpb246IG5vbmU7dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7bWFyZ2luLWJvdHRvbTogMjVweDsiIHdpZHRoPSI0MTEiIGNsYXNzPSJpdGVtLWltYWdlIj48L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PjxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIGxlZnQtYWxpZ25lZCIgc3R5bGU9InRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDtwYWRkaW5nOiAwO21hcmdpbi1ib3R0b206IC00cHg7Ij4NCjxkaXYgY2xhc3M9Iml0ZW0tc3VwZXJ0aXRsZSBzaW1wbGlmaWVkLWNvbG9yIiBzdHlsZT0iZm9udC1zaXplOiAxNXB4O2ZvbnQtd2VpZ2h0OiA2MDA7bGluZS1oZWlnaHQ6IDFlbTtsZXR0ZXItc3BhY2luZzogLjEyZW07dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtjb2xvcjogI2JkODA0OTttYXJnaW4tYm90dG9tOiA2cHg7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1kMTUwNzcxM2EzJmU9ODg5OWI3N2JlMiIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmU7Zm9udC1zaXplOiAxNXB4O2ZvbnQtd2VpZ2h0OiA2MDA7bGluZS1oZWlnaHQ6IDFlbTtsZXR0ZXItc3BhY2luZzogLjEyZW07dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtjb2xvcjogI2JkODA0OTtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPk1vbnRjbGFpciwgTmV3IEplcnNleTwvYT48L2Rpdj4NCg0KPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgbGVmdC1hbGlnbmVkIiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O3BhZGRpbmc6IDA7bWFyZ2luLWJvdHRvbTogLTRweDsiPg0KPGRpdiBjbGFzcz0iaDMiIHN0eWxlPSJkaXNwbGF5OiBibG9jaztmb250LXdlaWdodDogYm9sZDtmb250LXNpemU6IDMycHg7bGluZS1oZWlnaHQ6IDFlbTtjb2xvcjogIzM4MmMxNCAhaW1wb3J0YW50O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-PGEgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9MGViMDAxOGQ0YyZlPTg4OTliNzdiZTIiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmU7Y29sb3I6ICMzODJjMTQ7Ij5UaG9tYXMgRWRpc29uJiMzOTtzIENvbmNyZXRlIEhvdXNlczwvYT48L2Rpdj4NCjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJwIHNlcmlmIiBzdHlsZT0iY29sb3I6ICMzMzM7ZGlzcGxheTogYmxvY2s7Zm9udC1mYW1pbHk6IFRpbWVzTmV3Um9tYW4sVGltZXMgTmV3IFJvbWFuLFRpbWVzLEJhc2tlcnZpbGxlLEdlb3JnaWEsc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6IDE5cHg7bGluZS1oZWlnaHQ6IDI4cHg7bWFyZ2luLXRvcDogMjBweDtwYWRkaW5nLWxlZnQ6IDJweDtwYWRkaW5nLXJpZ2h0OiAycHg7dGV4dC1hbGlnbjogbGVmdDtsZXR0ZXItc3BhY2luZzogLjE5cHg7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1kZDgyNmFmNTZiJmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzMzMzsiPlRoZSBzby1jYWxsZWQgJmxkcXVvO3dpemFyZCBvZiBNZW5sbyBQYXJrJnJkcXVvOyBpcyBmYW1vdXMgZm9yIGludmVudGluZyBtYW55IHRoaW5ncywgaW5jbHVkaW5nIGltcHJvdmVtZW50cyB0byB0aGUgbGlnaHQgYnVsYiwgdGhlIHBob25vZ3JhcGgsIGFuZCB0aGUgbW90aW9uIHBpY3R1cmUgcHJvamVjdG9yLiBCdXQgRWRpc29uIGlzbiZyc3F1bzt0IHNvIHdlbGwga25vd24gZm9yIGNvbmNyZXRlLCBkZXNwaXRlIGJlaW5nIG9ic2Vzc2VkIHdpdGggdGhlIHN0dWZmLiBJbiAxOTA4LCBoZSBmaWxlZCBhIHBhdGVudCBmb3IgdGhlIGNvbnN0cnVjdGlvbiBvZiBidWlsZGluZ3MgdXNpbmcgYSBzaW5nbGUgcGxhY2VtZW50IG9mIGNvbmNyZXRlLiBVbHRpbWF0ZWx5IGEgbWFzc2l2ZSBmYWlsdXJlLCB0aGUgaWRlYSB3YXMgbm9uZXRoZWxlc3Mgd2F5IGFoZWFkIG9mIGl0cyB0aW1lLCBhbmQgc29tZSBvZiBoaXMgY29uY3JldGUgaG91c2VzIHN0aWxsIHN0YW5kIHRvZGF5LjwvYT48L2Rpdj4NCg0KPGRpdiBjbGFzcz0iaXRlbS1ib2R5LWxpbmsgc2ltcGxpZmllZC1jb2xvciIgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDtmb250LXdlaWdodDogNjAwO2xpbmUtaGVpZ2h0OiAxZW07bGV0dGVyLXNwYWNpbmc6IC4xMmVtO3RleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Y29sb3I6ICNiZDgwNDk7bWFyZ2luLXRvcDogMjBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij48YSBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD0xZDQ1NDFiYzM2JmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZTtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IDYwMDtsaW5lLWhlaWdodDogMWVtO2xldHRlci1zcGFjaW5nOiAuMTJlbTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2NvbG9yOiAjYmQ4MDQ5O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-UmVhZCBtb3JlIDxzcGFuIGNsYXNzPSJndWlsbGVtZXQiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7Ij4mcmFycjs8L3NwYW4-PC9hPjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJpdGVtLWJvZHktbGluayBzaW1wbGlmaWVkLWNvbG9yIiBzdHlsZT0iZm9udC1zaXplOiAxNXB4O2ZvbnQtd2VpZ2h0OiA2MDA7bGluZS1oZWlnaHQ6IDFlbTtsZXR0ZXItc3BhY2luZzogLjEyZW07dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtjb2xvcjogI2JkODA0OTttYXJnaW4tdG9wOiAyMHB4O2Rpc3BsYXk6IGlubGluZS1ibG9jaztmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPiZuYnNwOzwvZGl2Pg0KPC9kaXY-DQo8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gRW5kIFNpbXBsaWZpZWQgUmVwZWF0YWJsZSBNb2R1bGUgIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9ydW0gTW9kdWxlICAtLT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gRW5kIEZvcnVtIE1vZHVsZSAgLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibHJnLXNwYWNlciIgc3R5bGU9ImJhY2tncm91bmQ6ICNmNWY0ZjM7aGVpZ2h0OiAyNHB4O3dpZHRoOiAxMDAlOyI-PC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwhLS0gU1RBUlQgRm9vdGVyIGNvbnRlbnQgLS0-DQogICAgICAgICAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iNDc1IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIzMCIgY2VsbHNwYWNpbmc9IjAiIGJnY29sb3I9IiNmZmZmZmYiPg0KICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJsZWZ0IiB2YWxpZ249ImJvdHRvbSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib3V0bGluay1yb3cgY29udGVudC13aWR0aCIgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7cGFkZGluZy10b3A6IDEwcHg7d2lkdGg6IDEwMCU7bWluLXdpZHRoOiA0MTVweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9InBsYWNlLWxpbmsiIGNsYXNzPSJmb290ZXItb3V0bGluayBub25kZWNvcmF0ZWQiIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTBlMjdjNmI4MTEmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7d2lkdGg6IDQ1JTttYXgtd2lkdGg6IDE3MnB4O3BhZGRpbmctcmlnaHQ6IDUwcHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IkFkZCBhIHBsYWNlIHRvIHRoZSBBdGxhcyIgc3JjPSJodHRwczovL2dhbGxlcnkubWFpbGNoaW1wLmNvbS8zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlL2ltYWdlcy81MGVmYmQ5Mi0yNTI5LTRkZjUtOGVlYi05NWNkOWVlYjIxZjcucG5nIiBzdHlsZT0iYm9yZGVyOiBub25lO2ZvbnQtc2l6ZTogMTRweDtmb250LXdlaWdodDogYm9sZDtoZWlnaHQ6IDk1cHg7bGluZS1oZWlnaHQ6IDEwMCU7b3V0bGluZTogbm9uZTt0ZXh0LWRlY29yYXRpb246IG5vbmU7dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7bWF4LWhlaWdodDogOTVweDt3aWR0aDogYXV0bztkaXNwbGF5OiBpbmxpbmUtYmxvY2s7bWFyZ2luOiAwIDAgMTBweDsiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9Im5ld3NsZXR0ZXJzLWxpbmsiIGNsYXNzPSJmb290ZXItb3V0bGluayBub25kZWNvcmF0ZWQiIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPWNiY2IzZTA4MmImZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7d2lkdGg6IDQ1JTttYXgtd2lkdGg6IDE3MnB4O3BhZGRpbmctcmlnaHQ6IDA7dGV4dC1hbGlnbjogcmlnaHQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iU3Vic2NyaWJlIHRvIG91ciBvdGhlciBuZXdzbGV0dGVycyIgc3JjPSJodHRwczovL2dhbGxlcnkubWFpbGNoaW1wLmNvbS8zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlL2ltYWdlcy8xNzJhMjMyYy0yYjJmLTQ0NDItOWViYS0wNmQ3ZDdhMDQ2YTkucG5nIiBzdHlsZT0iYm9yZGVyOiBub25lO2ZvbnQtc2l6ZTogMTRweDtmb250LXdlaWdodDogYm9sZDtoZWlnaHQ6IDkzcHg7bGluZS1oZWlnaHQ6IDEwMCU7b3V0bGluZTogbm9uZTt0ZXh0LWRlY29yYXRpb246IG5vbmU7dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7bWF4LWhlaWdodDogOTVweDt3aWR0aDogYXV0bztkaXNwbGF5OiBpbmxpbmUtYmxvY2s7bWFyZ2luOiAwIDAgMTBweDsiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSI0NzUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBiZ2NvbG9yPSIjZjVmNGYzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RkLXNwYWNlciIgc3R5bGU9ImJhY2tncm91bmQ6ICNmNWY0ZjM7aGVpZ2h0OiAxcHg7d2lkdGg6IDEwMCU7Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgd2lkdGg9IjQ3NSIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMzAiIGNlbGxzcGFjaW5nPSIwIiBiZ2NvbG9yPSIjZmZmZmZmIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgdmFsaWduPSJib3R0b20iIGNsYXNzPSJsaW1pdC10by10ZW1wbGF0ZS1tYXgtd2lkdGgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWdsaW5lLXJvdyIgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7bWFyZ2luLWJvdHRvbTogMjlweDttYXJnaW4tdG9wOiAxMHB4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9InRhZ2xpbmUtbGluayIgY2xhc3M9Im5vbmRlY29yYXRlZCIgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9MWU4ZDc2MjMwYiZlPTg4OTliNzdiZTIiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBpZD0iZnVsbC10YWdsaW5lIiBhbHQ9IlRoZSBkZWZpbml0aXZlIGd1aWRlIHRvIHRoZSB3b3JsZCdzIGhpZGRlbiB3b25kZXJzLiIgc3JjPSJodHRwczovL2dhbGxlcnkubWFpbGNoaW1wLmNvbS8zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlL2ltYWdlcy8yNTU1MjJkOS1lNTA3LTQ4YTctYTY1My1kZjU0ZjU3M2U2ZjQucG5nIiB3aWR0aD0iMzEwIiBzdHlsZT0iYm9yZGVyOiBub25lO2ZvbnQtc2l6ZTogMTRweDtmb250LXdlaWdodDogYm9sZDtoZWlnaHQ6IGF1dG87bGluZS1oZWlnaHQ6IDEwMCU7b3V0bGluZTogbm9uZTt0ZXh0LWRlY29yYXRpb246IG5vbmU7dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7Ij48L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLXJvdyBsZWZ0LW1hcmdpbmVkIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTBweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vbmRlY29yYXRlZCIgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9OThkMDNlYzdiYyZlPTg4OTliNzdiZTIiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OiAyMHB4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaWQ9ImZhY2Vib29rIiBjbGFzcz0ic29jaWFsLXNwcml0ZSIgYWx0PSJGYWNlYm9vayIgc3JjPSJodHRwczovL2dhbGxlcnkubWFpbGNoaW1wLmNvbS8zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlL2ltYWdlcy80ZTQzY2U4Yi1mN2FjLTQxOWQtOWRlMy1jZTk2YjNmYThmZDUucG5nIiBoZWlnaHQ9IjIwIiBzdHlsZT0iYm9yZGVyOiBub25lO2ZvbnQtc2l6ZTogMTRweDtmb250LXdlaWdodDogYm9sZDtoZWlnaHQ6IDIwcHg7bGluZS1oZWlnaHQ6IDEwMCU7b3V0bGluZTogbm9uZTt0ZXh0LWRlY29yYXRpb246IG5vbmU7dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7d2lkdGg6IGF1dG87Ij48L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub25kZWNvcmF0ZWQiIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTMzYWNlZDBjMWQmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7ZGlzcGxheTogaW5saW5lLWJsb2NrO21hcmdpbi1yaWdodDogMjBweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaWQ9InR3aXR0ZXIiIGNsYXNzPSJzb2NpYWwtc3ByaXRlIiBhbHQ9IlR3aXR0ZXIiIHNyYz0iaHR0cHM6Ly9nYWxsZXJ5Lm1haWxjaGltcC5jb20vMzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZS9pbWFnZXMvOGFlMzFiNWItYTVhYi00NDdkLTllNTQtMDNiZjc1NjJkYjNkLnBuZyIgaGVpZ2h0PSIyMCIgc3R5bGU9ImJvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiAyMHB4O2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO3dpZHRoOiBhdXRvOyI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub25kZWNvcmF0ZWQiIGhyZWY9Imh0dHBzOi8vYXRsYXNvYnNjdXJhLnVzMS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT0zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlJmlkPTYyNTM3ZjcxZWYmZT04ODk5Yjc3YmUyIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7ZGlzcGxheTogaW5saW5lLWJsb2NrO21hcmdpbi1yaWdodDogMjBweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBpZD0iaW5zdGFncmFtIiBjbGFzcz0ic29jaWFsLXNwcml0ZSIgYWx0PSJJbnN0YWdyYW0iIHNyYz0iaHR0cHM6Ly9nYWxsZXJ5Lm1haWxjaGltcC5jb20vMzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZS9pbWFnZXMvNzk2ODk5MDMtZWFkOS00NzRhLWI4OGItYmU0MGJlMDFiNTJkLnBuZyIgaGVpZ2h0PSIyMCIgc3R5bGU9ImJvcmRlcjogbm9uZTtmb250LXNpemU6IDE0cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7aGVpZ2h0OiAyMHB4O2xpbmUtaGVpZ2h0OiAxMDAlO291dGxpbmU6IG5vbmU7dGV4dC1kZWNvcmF0aW9uOiBub25lO3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO3dpZHRoOiBhdXRvOyI-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vbmRlY29yYXRlZCIgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9NTdlOThkZTQ4NiZlPTg4OTliNzdiZTIiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OiAyMHB4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaWQ9InlvdXR1YmUiIGNsYXNzPSJzb2NpYWwtc3ByaXRlIiBhbHQ9Ikluc3RhZ3JhbSIgc3JjPSJodHRwczovL2dhbGxlcnkubWFpbGNoaW1wLmNvbS8zOTlmYzA0MDJmMWIxNTRiNjc5NjU2MzJlL2ltYWdlcy9kYTAyOGRhYi0xNzMwLTRhMmMtYjNhOC0zMTFkOGQ3MDFiNTgucG5nIiBoZWlnaHQ9IjIwIiBzdHlsZT0iYm9yZGVyOiBub25lO2ZvbnQtc2l6ZTogMTRweDtmb250LXdlaWdodDogYm9sZDtoZWlnaHQ6IDIwcHg7bGluZS1oZWlnaHQ6IDEwMCU7b3V0bGluZTogbm9uZTt0ZXh0LWRlY29yYXRpb246IG5vbmU7dGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7d2lkdGg6IGF1dG87Ij48L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iNDc1Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249ImJvdHRvbSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJmb290ZXItaW5saW5lLWxpbmtzIiBzdHlsZT0iY29sb3I6ICNiZDgwNDk7bWFyZ2luOiAxM3B4IDAgMTBweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ic2FucyIgaHJlZj0iaHR0cHM6Ly9hdGxhc29ic2N1cmEudXMxLmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTM5OWZjMDQwMmYxYjE1NGI2Nzk2NTYzMmUmaWQ9N2Y2MWQzNTBjNCZlPTg4OTliNzdiZTIiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtjb2xvcjogI2JkODA0OSAhaW1wb3J0YW50O2ZvbnQtc2l6ZTogMTFweDtsZXR0ZXItc3BhY2luZzogLjc4cHg7bGluZS1oZWlnaHQ6IDE1cHg7Zm9udC13ZWlnaHQ6IG5vcm1hbDt0ZXh0LWFsaWduOiBjZW50ZXI7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij5WaXNpdCBBdGxhc09ic2N1cmEuY29tPC9hPiA8c3BhbiBjbGFzcz0iaW5saW5lLXBpcGUiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7Zm9udC1zaXplOiAxMXB4O21hcmdpbjogMCAxcHg7Ij7Ctzwvc3Bhbj4gPGEgY2xhc3M9InNhbnMiIGhyZWY9Imh0dHBzOi8vbWFpbGNoaS5tcC9hdGxhc29ic2N1cmEuY29tL3ByZXNpZGVudGlhbC1waWUtZGFpbHktMjYxMTM4P2U9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO2NvbG9yOiAjYmQ4MDQ5ICFpbXBvcnRhbnQ7Zm9udC1zaXplOiAxMXB4O2xldHRlci1zcGFjaW5nOiAuNzhweDtsaW5lLWhlaWdodDogMTVweDtmb250LXdlaWdodDogbm9ybWFsO3RleHQtYWxpZ246IGNlbnRlcjtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPlZpZXcgaW4gQnJvd3NlcjwvYT4gPHNwYW4gY2xhc3M9ImlubGluZS1waXBlIiBzdHlsZT0idmVydGljYWwtYWxpZ246IGJhc2VsaW5lO2ZvbnQtc2l6ZTogMTFweDttYXJnaW46IDAgMXB4OyI-wrc8L3NwYW4-IDxhIGNsYXNzPSJzYW5zIiBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3Vuc3Vic2NyaWJlP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1mMzZkYjljNDgwJmU9ODg5OWI3N2JlMiZjPTJkNzc2YWNjN2QiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtjb2xvcjogI2JkODA0OSAhaW1wb3J0YW50O2ZvbnQtc2l6ZTogMTFweDtsZXR0ZXItc3BhY2luZzogLjc4cHg7bGluZS1oZWlnaHQ6IDE1cHg7Zm9udC13ZWlnaHQ6IG5vcm1hbDt0ZXh0LWFsaWduOiBjZW50ZXI7Zm9udC1mYW1pbHk6ICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCZxdW90O0hlbHZldGljYSZxdW90OywnQXJpYWwnLHNhbnMtc2VyaWYsJ25vcm1hbCcsJ0Ryb2lkIFNhbnMnLCdSb2JvdG8nICFpbXBvcnRhbnQ7Ij5VbnN1YnNjcmliZTwvYT4gPHNwYW4gY2xhc3M9ImlubGluZS1waXBlIiBzdHlsZT0idmVydGljYWwtYWxpZ246IGJhc2VsaW5lO2ZvbnQtc2l6ZTogMTFweDttYXJnaW46IDAgMXB4OyI-wrc8L3NwYW4-IDxhIGNsYXNzPSJzYW5zIiBocmVmPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD1kMzYyMWVmNmEwJmU9ODg5OWI3N2JlMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO2NvbG9yOiAjYmQ4MDQ5ICFpbXBvcnRhbnQ7Zm9udC1zaXplOiAxMXB4O2xldHRlci1zcGFjaW5nOiAuNzhweDtsaW5lLWhlaWdodDogMTVweDtmb250LXdlaWdodDogbm9ybWFsO3RleHQtYWxpZ246IGNlbnRlcjtmb250LWZhbWlseTogJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssJnF1b3Q7SGVsdmV0aWNhJnF1b3Q7LCdBcmlhbCcsc2Fucy1zZXJpZiwnbm9ybWFsJywnRHJvaWQgU2FucycsJ1JvYm90bycgIWltcG9ydGFudDsiPlNlZSBBbGwgTmV3c2xldHRlcnM8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1hZGRyZXNzIHNhbnMiIHN0eWxlPSJjb2xvcjogIzY2NjY2Njtmb250LXNpemU6IDExcHg7bGV0dGVyLXNwYWNpbmc6IC4yN3B4O2xpbmUtaGVpZ2h0OiAxOXB4O2ZvbnQtZmFtaWx5OiAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywmcXVvdDtIZWx2ZXRpY2EmcXVvdDssJ0FyaWFsJyxzYW5zLXNlcmlmLCdub3JtYWwnLCdEcm9pZCBTYW5zJywnUm9ib3RvJyAhaW1wb3J0YW50OyI-NjEgR3JlZW5wb2ludCBBdmUgIzYyMiwgQnJvb2tseW4sIE5ZIDExMjIyPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249InRvcCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJscmctc3BhY2VyIiBzdHlsZT0iYmFja2dyb3VuZDogI2Y1ZjRmMztoZWlnaHQ6IDI0cHg7d2lkdGg6IDEwMCU7Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gRU5EIEZvb3RlciBjb250ZW50IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gY2FtcGFpZ24gY29udGVudCBlbmQgLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBNQyBjb250ZW50IGVuZCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgPC9jZW50ZXI-DQogICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2F0bGFzb2JzY3VyYS51czEubGlzdC1tYW5hZ2UuY29tL3RyYWNrL29wZW4ucGhwP3U9Mzk5ZmMwNDAyZjFiMTU0YjY3OTY1NjMyZSZpZD0yZDc3NmFjYzdkJmU9ODg5OWI3N2JlMiIgaGVpZ2h0PSIxIiB3aWR0aD0iMSI-PC9ib2R5Pg0KPC9odG1sPg==',
      }
    }],
  },
  internalDate: "1612672080000",
}

export const exampleMessage3 =
{
  "id": "177a315bc8cbad60",
  "threadId": "177a315bc8cbad60",
  "labelIds": [
    "CATEGORY_PROMOTIONS",
    "IMPORTANT",
    "INBOX"
  ],
  "snippet": "Articles from the Experts + Free memberships It&#39;s been a weird year, Kunal, and Valentine&#39;s Day 2021 is no exception! We know how much dating has changed, so our team has been working on some",
  "payload": {
    "partId": "",
    "mimeType": "multipart/alternative",
    "filename": "",
    "headers": [
      {
        "name": "Delivered-To",
        "value": "kunalm@gmail.com"
      },
      {
        "name": "Received",
        "value": "by 2002:a05:6a10:2b1:0:0:0:0 with SMTP id 17csp5039686pxm;        Sun, 14 Feb 2021 16:27:27 -0800 (PST)"
      },
      {
        "name": "X-Google-Smtp-Source",
        "value": "ABdhPJzT398BUDItXOtGO+h4jfL6FH67W/iFPFR+BwZZXDz43guvyhAs6k73Hdgbth84c+hvUbYV"
      },
      {
        "name": "X-Received",
        "value": "by 2002:aca:5c87:: with SMTP id q129mr6908215oib.24.1613348846916;        Sun, 14 Feb 2021 16:27:26 -0800 (PST)"
      },
      {
        "name": "ARC-Seal",
        "value": "i=1; a=rsa-sha256; t=1613348846; cv=none;        d=google.com; s=arc-20160816;        b=vJg+VTLKPjQoN+gNVdfTNLSz6KljAP1I5RUzGwJRX984uSQtUqxXkXK4qDszc8YWU5         hHiOHdvU6Qw9tvaNQ0ZEjABJYou1KEUf6XifAImUZi+o6VWPXMH0M/mcyOTbI2QWJ9Ol         BPERTsqJjLT8PQuIMRwDAJGwBd7rpzFFvGLihMpJe7gqt3c4zkGdmzMu8/aUup3do4ls         mV6g0sgxF3rI1MvckScSZHrskN9PMfrDaBsZQqINV55zKn1+eRUGyIV4haeqLBBgXq9x         PuUSBlOIjyQu5ZsKpWqdMMpf0IroPjYYeoc9ByLExhF7Vki0tqmBOHDHYdgqGZzdC2WS         8vrA=="
      },
      {
        "name": "ARC-Message-Signature",
        "value": "i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;        h=feedback-id:message-id:list-id:reply-to:mime-version         :list-unsubscribe:date:subject:to:from:dkim-signature;        bh=AOlrdEPBBRu5UHsUb83AB0YjPlDmMKRIJLRx+QKiXSw=;        b=gg6YPOfH/e0aPgvTbZ+IamGFUjMIAPHLZB/5ydMloI3xukLazHU8Jr0PgH8t3EEtJn         Tqr8xtRt7V7NafTQ8fpM0W9btLpBTD8h0ADUWZSD7uUGMJu/2/9aeXVgypW1wkp7obxt         waLA/4p9dwgKk8f/PRbelF782EBRDWrIwgWKTNe6/sypflqat+en/9DzdSNkbYLul2Il         1gYIDw4Ir5XFLQgH6rMR2ktasWqY57ltcelq+kTXq8N939L/d464/BZS82JlzbwMmjlS         YJ4Z9je4HJEMguoyEoVh9f7L1aCjH1aBozRZ5c3LpNj5At1gqFe9oUs5G4tUQv6ZfPPY         e7eA=="
      },
      {
        "name": "ARC-Authentication-Results",
        "value": "i=1; mx.google.com;       dkim=pass header.i=@communications.tawkify.com header.s=10dkim1 header.b=OvB6gcbV;       spf=pass (google.com: domain of bounce-152_html-52698124-186546-100026760-15004@bounce.communications.tawkify.com designates 13.111.125.1 as permitted sender) smtp.mailfrom=bounce-152_HTML-52698124-186546-100026760-15004@bounce.communications.tawkify.com;       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=tawkify.com"
      },
      {
        "name": "Return-Path",
        "value": "\u003cbounce-152_HTML-52698124-186546-100026760-15004@bounce.communications.tawkify.com\u003e"
      },
      {
        "name": "Received",
        "value": "from mta.communications.tawkify.com (mta.communications.tawkify.com. [13.111.125.1])        by mx.google.com with ESMTPS id o9si9618600oik.107.2021.02.14.16.27.26        for \u003ckunalm@gmail.com\u003e        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);        Sun, 14 Feb 2021 16:27:26 -0800 (PST)"
      },
      {
        "name": "Received-SPF",
        "value": "pass (google.com: domain of bounce-152_html-52698124-186546-100026760-15004@bounce.communications.tawkify.com designates 13.111.125.1 as permitted sender) client-ip=13.111.125.1;"
      },
      {
        "name": "Authentication-Results",
        "value": "mx.google.com;       dkim=pass header.i=@communications.tawkify.com header.s=10dkim1 header.b=OvB6gcbV;       spf=pass (google.com: domain of bounce-152_html-52698124-186546-100026760-15004@bounce.communications.tawkify.com designates 13.111.125.1 as permitted sender) smtp.mailfrom=bounce-152_HTML-52698124-186546-100026760-15004@bounce.communications.tawkify.com;       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=tawkify.com"
      },
      {
        "name": "DKIM-Signature",
        "value": "v=1; a=rsa-sha256; c=relaxed/relaxed; s=10dkim1; d=communications.tawkify.com; h=From:To:Subject:Date:List-Unsubscribe:MIME-Version:Reply-To:List-ID: X-CSA-Complaints:Message-ID:Content-Type; i=emma@communications.tawkify.com; bh=AOlrdEPBBRu5UHsUb83AB0YjPlDmMKRIJLRx+QKiXSw=; b=OvB6gcbVnTzlLKi7GeRobWCwI3aeEfKC90++cWZNiXat1uKfVxoWu/qsCXLjI8t1dOJ91Z+I6w8x   wHe9hxd7nMVn9ALxQ6y5jOuwx+PqcV3Fh2ZEURGgUfAE0Fa/qTUyX3fmE9uXFiYNKQyD9PQPjWzn   p8OMhBYRe/6nINPoRJZjJb6KNPWJ8P/8OdyBfTg4aLQTUnHJ/Po03vSAHjzJj6xMu7/oBMnqKT/K   C3X4rUF8miEkj34H9M54MmAA3sS2/TlpkkDOztYMOVVQhFxh35S682LKpxDZEpsLlCXjYq8x8HlW   O7e/uWom8dr4h6zsIzxpyg5vcI72ndowCC3ogA=="
      },
      {
        "name": "Received",
        "value": "by mta.communications.tawkify.com id h56vus2fmd4t for \u003ckunalm@gmail.com\u003e; Mon, 15 Feb 2021 00:26:47 +0000 (envelope-from \u003cbounce-152_HTML-52698124-186546-100026760-15004@bounce.communications.tawkify.com\u003e)"
      },
      {
        "name": "From",
        "value": "Emma at Tawkify \u003cemma@communications.tawkify.com\u003e"
      },
      {
        "name": "To",
        "value": "\u003ckunalm@gmail.com\u003e"
      },
      {
        "name": "Subject",
        "value": "Valentine's Day 2021"
      },
      {
        "name": "Date",
        "value": "Sun, 14 Feb 2021 18:26:47 -0600"
      },
      {
        "name": "List-Unsubscribe",
        "value": "\u003cmailto:leave-fd531575770b5c392848-fe5a1172736d0c7c7710-fec115787361007b-fe3915707564067b721270-ff051575756400@leave.communications.tawkify.com\u003e"
      },
      {
        "name": "MIME-Version",
        "value": "1.0"
      },
      {
        "name": "Reply-To",
        "value": "Emma at Tawkify \u003creply-fec115787361007b-152_HTML-52698124-100026760-15004@communications.tawkify.com\u003e"
      },
      {
        "name": "List-ID",
        "value": "\u003c100026760.xt.local\u003e"
      },
      {
        "name": "X-CSA-Complaints",
        "value": "csa-complaints@eco.de"
      },
      {
        "name": "X-SFMC-Stack",
        "value": "10"
      },
      {
        "name": "x-job",
        "value": "100026760_186546"
      },
      {
        "name": "Message-ID",
        "value": "\u003cbbf1a1e6-9b85-4aab-8a70-cd7e19257e11@dfw1s10mta823.xt.local\u003e"
      },
      {
        "name": "Feedback-ID",
        "value": "100026760:186546:13.111.125.1:sfmktgcld"
      },
      {
        "name": "Content-Type",
        "value": "multipart/alternative; boundary=\"j7Zn0Hn403Ix=_?:\""
      }
    ],
    "body": {
      "size": 0
    },
    "parts": [
      {
        "partId": "0",
        "mimeType": "text/plain",
        "filename": "",
        "headers": [
          {
            "name": "Content-Type",
            "value": "text/plain; charset=\"utf-8\""
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "8bit"
          }
        ],
        "body": {
          "size": 1195,
          "data": "SXQncyBiZWVuIGEgd2VpcmQgeWVhciwgS3VuYWwsIGFuZCBWYWxlbnRpbmUncyBEYXkgMjAyMSBpcyBubyBleGNlcHRpb24hwqBXZSBrbm93IGhvdyBtdWNoIGRhdGluZyBoYXMgY2hhbmdlZCwgc28gb3VyIHRlYW0gaGFzwqBiZWVuIHdvcmtpbmcgb24gc29tZSBuZXcgdGhpbmdzIHRvIGhlbHAgZXZlcnlvbmUgZGF0ZS1vbiB3aXRoIGNvbmZpZGVuY2UsIHdoYXRldmVyIGNvbWVzOg0KwqANClZpcnR1YWwgZGF0ZXJzLCB0aGlzIGlzIGEgdmlkZW8gZGF0ZSBkcmVzc2luZyBndWlkZSBmcm9tIG91ciBibG9nIHRlYW0gPGh0dHA6Ly9ibG9nLnRhd2tpZnkuY29tL2Jsb2ctdGF3a2lmeS8yMDIxLzEvMjcveW91ci1ndWlkZS10by1kcmVzc2luZy1mb3ItYS12aXJ0dWFsLWRhdGU-LCBhbmQgaGVyZSBpcyBhIGNhdGNoLWFsbCBhcnRpY2xlwqBmb3IgZGF0ZSBwbGFubmluZyBpbiAyMDIxIDxodHRwOi8vYmxvZy50YXdraWZ5LmNvbS9ibG9nLXRhd2tpZnkvMjAyMS8yLzE3L2NvdmlkLWNocm9uaWNsZXMtZGF0ZS1wbGFubmluZy1pbi0yMDIxPi4NCg0KQWxzbyBnb2luZyBvbiB0aGlzIG1vbnRoLCBvdXIgYW5udWFsIE1vbnRoIG9mIExvdmUgZXZlbnQuIEFsbCBGZWJydWFyeSBsb25nLMKgd2Ugb3BlbiBtYXRjaGFibGUgbWVtYmVyc2hpcCB0byB5b3UgYW5kIHRvIHRob3NlIHlvdSB0aGluayB3b3VsZCBiZSBhIGdvb2QgYWRkaXRpb24gdG8gdGhlIG5ldHdvcmsuIFRob3NlIHdobyBhY2NlcHQgdGhlIGludml0YXRpb24gYXJlIGFjdGl2YXRlZCBmb3IgYSB5ZWFyIG9mIHBvc3NpYmxlIG1hdGNoaW5nIHdpdGggVGF3a2lmeSBjbGllbnRzLsKgR2l2ZSB0byB5b3Vyc2VsZsKgd2l0aCB0aGlzIGxpbmsgPGh0dHBzOi8vdGF3a2lmeS5jb20vYWN0aXZhdGUvZnJlZV90cmlhbD9wcj1GUkVFTUVNQkVSVFJJQUw-LCB0aGVuIHNoYXJlIHdpdGggdGhpcyBvbmUgPGJsb2cudGF3a2lmeS5jb20vc2hhcmVhYmxlLWZyZWUtdGF3a2lmeS1tZW1iZXJzaGlwPi7CoA0KDQpXaGF0ZXZlciB5b3VyIHBsYW5zIGFyZSB0b25pZ2h0LCB3ZSBob3BlIHlvdSdyZSBkb2luZyBzb21ldGhpbmcgdGhhdCBtYWtlcyB5b3UgZmVlbCBsb3ZlZCAtIHdoZXRoZXIgdGhhdCdzIGEgZGlubmVyIGRhdGUsIGEgbW92aWUgbmlnaHQgd2l0aCBmcmllbmRzLCBvciBhIGJ1YmJsZSBiYXRoISBNdWNoIGxvdmUsIFlvdXIgVGF3a2lmeSBUZWFtDQoNCg=="
        }
      },
      {
        "partId": "1",
        "mimeType": "text/html",
        "filename": "",
        "headers": [
          {
            "name": "Content-Type",
            "value": "text/html; charset=\"utf-8\""
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "8bit"
          }
        ],
        "body": {
          "size": 23530,
          "data": ""
        }
      }
    ]
  },
  "sizeEstimate": 29780,
  "historyId": "14431107",
  "internalDate": "1613348807000"
}
;